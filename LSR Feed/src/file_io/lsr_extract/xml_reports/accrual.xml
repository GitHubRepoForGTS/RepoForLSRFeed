<?xml version="1.0" encoding="UTF-8"?>

<!--                                                 -->
<!--    Break-fix - Report SQLs DTD and XML          -->
<!--                                                 -->

<!-- Modification History                            	 		-->
<!-- 01/06/2005 | KW | First Cut					-->
<!-- 01/09/2005 | KW | Moved DTD to external file LSRExtract.dtd	-->
<!-- 03/28/2006 | VM | C2246 Changed SQl for each report to add new columns             -->
<!--                   C2246 Changed the export file name for all reports               -->
<!--                   C2246 Changed the date format for all reports                    -->
<!-- 2009-04-27 | VM | Added ISC fee for IBM reporting on Royal Bank Activity           -->
<!-- 2009-05-01 | VM | Added capability to accommodate a parts management fee credit     -->
<!-- 2009-06-29 | VM | V18 Change the capture period to use min LEN_DATA_REC column = N -->
<!-- 2009-12-01 | VM | Added section for PARTS_COST_CR -->
<!-- 2010-04-01 | VM | Modified where clause from selecing only New and Resubmit to include all records that have not been cancelled. -->
<!-- 2010-05-26 | VM | Modified Parts Management Fee from 9 percent to 7 percent -->
<!-- 2011-01-20 | VM | Modified Parts Management Fee from 7 percent to 2.3 percent -->


<!DOCTYPE reports SYSTEM "./../../dtd/LSRExtract.dtd">

<reports>
 
  <multiReport>
      <fileName text="lenovo_accrual.csv" />
      <dateFormat text="MMMM dd yyyy" />
      <timeFormat text="HH:MM:SS" />

      <subReport includeHeader="None" includeTotals="N">
      	<SQL text="
      	
		SELECT
		'LENOVO ACCRUAL PERIOD ENDING '  || CAST (MIN(PERIOD_END_DTE) AS CHAR(10))
		FROM LENOVO.PERIOD_DATES WHERE LEN_DATA_REC = 'N' 		
	"/>
      </subReport>


      <subReport includeHeader="Db2Header" includeTotals="Y">
      	<SQL text="

		WITH TARGET_PERIOD(PERIOD_END_DTE) AS (
			SELECT MIN(PERIOD_END_DTE) FROM LENOVO.PERIOD_DATES WHERE LEN_DATA_REC = 'N' 
		),

		PARTS_CREDIT(KEY, PARTS_CREDIT) AS ( 
			SELECT 'PARTS', 
			VALUE(SUM(PART_CREDIT),0) AS PARTS_CREDIT 
			FROM LENOVO.PL_ALL_BYWW_V 
			WHERE EFFECTIVE_PERIOD IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND DETAIL_STATUS NOT IN ('CANCEL') 
			AND WW_CDE = '61' 
			AND COUNTRY_CDE = '649'
		),

		PARTS_WAC(KEY, PARTS_WAC) AS (
			SELECT 'PARTS', 
			VALUE(SUM(PART_COST), 0) AS PART_WAC
			FROM LENOVO.PL_ALL_BYWW_V 
			WHERE EFFECTIVE_PERIOD IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND DETAIL_STATUS NOT IN ('CANCEL') 
			AND WW_CDE = '60'
			AND COUNTRY_CDE = '649'
		),

		PARTS_SCRAP(KEY, PARTS_SCRAP) AS (
			SELECT 'PARTS', 
			VALUE(SUM(PART_COST), 0) AS PART_SCRAP
			FROM LENOVO.PL_ALL_BYWW_V 
			WHERE EFFECTIVE_PERIOD IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND DETAIL_STATUS NOT IN ('CANCEL') 
			AND WW_CDE IN ('48','49')
			AND COUNTRY_CDE = '649'
		),
		
		PARTS_ISC(KEY, PARTS_ISC) AS (
			SELECT 'PARTS', 
			VALUE(SUM(PART_COST), 0) AS PART_ISC
			FROM LENOVO.PL_ALL_BYWW_V 
			WHERE EFFECTIVE_PERIOD IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND DETAIL_STATUS NOT IN ('CANCEL') 
			AND WW_CDE IN ('99')
			AND COUNTRY_CDE = '649'
		),

		PARTS_OTHER(KEY, PARTS_OTHER) AS (
			SELECT 'PARTS', 
			VALUE(SUM(PART_COST), 0) AS PARTS_OTHER
			FROM LENOVO.PL_ALL_BYWW_V 
			WHERE EFFECTIVE_PERIOD IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND DETAIL_STATUS NOT IN ('CANCEL') 
			AND WW_CDE NOT IN ('61', '60', '48', '49', '99')
			AND COUNTRY_CDE = '649'
		),

		PARTS_FEE(KEY, PARTS_FEE) AS (
			SELECT 'PARTS', 
			VALUE(PARTS_WAC * .023, 0) AS PARTS_FEE
			FROM PARTS_WAC
		),
		
		PARTS_DIST(KEY, PARTS_DIST) AS (
			SELECT 'PARTS', 
			VALUE(SUM(BILLING_RATE * TRANSACTION_CNT), 0) AS PARTS_DIST
			FROM LENOVO.PL_ALL_BYWW_V 
			WHERE EFFECTIVE_PERIOD IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND DETAIL_STATUS NOT IN ('CANCEL') 
			AND WW_CDE NOT IN ('61', '60', '48', '49', '99')
			AND COUNTRY_CDE = '649'
		),

		PARTS_DIST_CR (KEY, PARTS_DIST_CR) AS (
			SELECT 'PARTS', 
			VALUE(SUM(BILLING_RATE * TRANSACTION_CNT), 0) AS PARTS_DIST_CR
			FROM LENOVO.PL_DETAIL_CR 
			WHERE PERIOD_END_DTE IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND STATUS = 'CREDIT' 
                        AND BILLABLE = 'Y'
			AND WW_CDE NOT IN ('61', '60', '48', '49')
			AND COUNTRY_CDE = '649'
		),

		PARTS_COST_CR (KEY, PARTS_COST_CR) AS (
			SELECT 'PARTS', 
			VALUE(SUM(PART_COST), 0) AS PARTS_COST_CR
			FROM LENOVO.PL_DETAIL_CR 
			WHERE PERIOD_END_DTE IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND STATUS = 'CREDIT' 
                        AND BILLABLE = 'Y'
			AND COUNTRY_CDE = '649'
		),

		BF(KEY, TOTAL_BF) AS (
			SELECT 'BREAK FIX',
			SUM(BILLING_RATE * TRANSACTION_CNT) AS TOTAL_BF
			FROM LENOVO.BF_ALL_BYWW_V A
			WHERE EFFECTIVE_PERIOD IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND DETAIL_STATUS NOT IN ('CANCEL')
			AND COUNTRY_CDE = '649'
		),

		BF_CR(KEY, TOTAL_BF_CR) AS (
			SELECT 'BREAK FIX',
			SUM(BILLING_RATE * TRANSACTION_CNT) AS TOTAL_BF_CR
			FROM LENOVO.BF_DETAIL_CR
			WHERE PERIOD_END_DTE IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND STATUS = 'CREDIT' 
			AND BILLABLE = 'Y'
			AND COUNTRY_CDE = '649'
		),

		RCS(KEY, TOTAL_RCS) AS (
			SELECT 'RCS',
			SUM(BILLING_RATE * TRANSACTION_CNT) AS TOTAL_RCS
			FROM LENOVO.RCS_ALL_BYWW_V A
			WHERE EFFECTIVE_PERIOD IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND DETAIL_STATUS NOT IN ('CANCEL')
			AND COUNTRY_CDE = '649'
		),

		RCS_CR(KEY, TOTAL_RCS_CR) AS (
			SELECT 'RCS',
			SUM(BILLING_RATE * TRANSACTION_CNT) AS TOTAL_RCS_CR
			FROM LENOVO.RCS_DETAIL_CR
			WHERE PERIOD_END_DTE IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND STATUS = 'CREDIT' 
			AND BILLABLE = 'Y'
			AND COUNTRY_CDE = '649'
		),

		DR(KEY, TOTAL_DR) AS (
			SELECT 'DEPOT',
			SUM(BILLING_RATE * TRANSACTION_CNT) AS TOTAL_DR
			FROM LENOVO.DR_ALL_BYWW_V A
			WHERE EFFECTIVE_PERIOD IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND DETAIL_STATUS NOT IN ('CANCEL')
			AND COUNTRY_CDE = '649'
		),

		DR_CR(KEY, TOTAL_DR_CR) AS (
			SELECT 'DEPOT',
			SUM(BILLING_RATE * TRANSACTION_CNT) AS TOTAL_DR_CR
			FROM LENOVO.DR_DETAIL_CR
			WHERE PERIOD_END_DTE IN (SELECT PERIOD_END_DTE FROM TARGET_PERIOD) 
			AND STATUS = 'CREDIT' 
			AND BILLABLE = 'Y'
			AND COUNTRY_CDE = '649'
		),

		TOTAL_ALL (BUSINESS_AREA, TRANSACTIONS, PART_COST, PARTS_MANAGEMENT_FEE, SCRAP, TOTALS) AS (
			SELECT 'RCS' as BUSINESS_AREA, 
				ROUND(VALUE(TOTAL_RCS, 0) - VALUE(TOTAL_RCS_CR, 0), 2) AS TRANSACTIONS,
				0.00 AS PART_COST,
				0.00 AS PARTS_MANAGEMENT_FEE,
				0.00 AS SCRAP,
				ROUND(VALUE(TOTAL_RCS, 0) - VALUE(TOTAL_RCS_CR, 0), 2) AS TOTALS
			FROM RCS A LEFT JOIN RCS_CR B ON A .KEY = B.KEY 
			UNION all
			SELECT 'BF' as BUSINESS_AREA, 
				ROUND(VALUE(TOTAL_BF, 0) - VALUE(TOTAL_BF_CR, 0), 2) AS TRANSACTIONS,
				0 AS PART_COST,
				0 AS PARTS_MANAGEMENT_FEE,
				0 AS SCRAP,
				ROUND(VALUE(TOTAL_BF, 0) - VALUE(TOTAL_BF_CR, 0), 2) AS TOTALS
			FROM BF A LEFT JOIN BF_CR B ON A .KEY = B.KEY 
			UNION all
			SELECT 'DR' as BUSINESS_AREA, 
				ROUND(VALUE(TOTAL_DR, 0) - VALUE(TOTAL_DR_CR, 0), 2) AS TRANSACTIONS, 
				0 AS PART_COST,
				0 AS PARTS_MANAGEMENT_FEE,
				0 AS SCRAP,
				ROUND(VALUE(TOTAL_DR, 0) - VALUE(TOTAL_DR_CR, 0), 2) AS TOTALS
			FROM DR A LEFT JOIN DR_CR B ON A .KEY = B.KEY 
			UNION all
			SELECT 'PARTS  LOGISTICS' as BUSINESS_AREA, 
				ROUND(VALUE(PARTS_DIST, 0) - VALUE(PARTS_DIST_CR, 0) + VALUE(PARTS_ISC, 0) , 2) AS TRANSACTIONS,
				ROUND(VALUE(PARTS_WAC, 0) + VALUE(PARTS_OTHER, 0) - VALUE(PARTS_CREDIT, 0) - VALUE(PARTS_COST_CR, 0), 2) AS PART_COST,
				ROUND(VALUE(PARTS_FEE, 0), 2) AS PARTS_MANAGEMENT_FEE,
				ROUND(VALUE(PARTS_SCRAP, 0), 2) AS SCRAP,
				ROUND(VALUE(PARTS_WAC, 0) + VALUE(PARTS_OTHER, 0) + VALUE(PARTS_DIST, 0) + VALUE(PARTS_SCRAP, 0) + VALUE(PARTS_FEE, 0) - VALUE(PARTS_CREDIT, 0) - VALUE(PARTS_DIST_CR, 0) + VALUE(PARTS_ISC, 0) - VALUE(PARTS_COST_CR, 0) , 2) AS TOTALS
			FROM PARTS_WAC A LEFT JOIN PARTS_CREDIT B ON A .KEY = B.KEY 
			LEFT JOIN PARTS_FEE C ON A.KEY = C.KEY
			LEFT JOIN PARTS_DIST D ON A .KEY = D.KEY
			LEFT JOIN PARTS_SCRAP E ON A.KEY = E.KEY
			LEFT JOIN PARTS_OTHER F ON A.KEY = F.KEY
                        LEFT JOIN PARTS_DIST_CR G ON A .KEY = G.KEY
                        LEFT JOIN PARTS_ISC H ON A .KEY = H.KEY
                        LEFT JOIN PARTS_COST_CR I ON A .KEY = I.KEY
                        
		)

		SELECT * FROM TOTAL_ALL	
	"/>
      </subReport>
      
  </multiReport>    

</reports>
