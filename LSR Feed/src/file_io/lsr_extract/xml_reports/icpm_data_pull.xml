<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reports SYSTEM "./../../dtd/LSRExtract.dtd">

<!-- MODIFICATION HISTORY                                                                                            -->
<!-- 2010-03-18	VM	First Cut                                                                                    -->
<!-- 2010-05-19	VM	Added code for capturing WW17 CRU for Visual Monitors no code yet for recovery CDs           -->
<!-- 2010-05-25	VM	Removed column DEP_TIER_IND that was used in calculation for a inbound calls                 -->
<!-- 2010-05-26	VM	Removed inbound and info count limit of 5 calls.  It no longer has a limit                   -->
<!-- 2010-11-12	VM	Changed RB1 classification into RB1 and RB2                                                  -->
<!-- 2010-12-10	VM	Added Depot automated pull and anomalies                                                     -->
<!-- 2011-01-17	VM	Modified Depot SQL to capture anolamies in correct place                                     -->
<!-- 2011-01-17	VM	Add TD Bank Incidental Contract                                                              -->
<!-- 2011-02-16	VM	Add COMPANY_NAME to all feed output                                                          -->
<!-- 2011-02-25	VM	Modified depot anomalies to include company_name                                             -->


<reports>
<!-- Report1: RCS: Load Location:  /lsrfeed/file_io/lsr_feed/rcs/new_transaction/ -->
  <report includeHeader="Db2Header">
    <fileName text="icpm_load_rcs.csv" />
    <dateFormat text="YYYY/MM/DD" />
    <timeFormat text="HH:MM:SS" />
    <SQL text="
    WITH PERIOD(PERIOD_END_DTE, PERIOD_START_DTE) AS (
    SELECT MIN(PERIOD_END_DTE), MIN(PERIOD_START_DTE) FROM CS.LEN_PERIOD_DATES04 
    WHERE LEN_DATA_REC = 'N' 
    ), 
    
    ICPM_TSP (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND) AS (
    SELECT A.DOCNUM, 
    LTRIM(RTRIM(B.CLOSE_CODE)), 
    B.CLOSE_DATE, 
    LTRIM(RTRIM(UPPER(B.CUST_NAME))), 
    B.CUST_ST, B.CUST_ZIP, B.ECCO_ID, B.ENTRY_EMP, 
    CAST(CASE WHEN LTRIM(RTRIM(B.LENOVO_INB)) = '' THEN '0' ELSE B.LENOVO_INB END AS INTEGER) AS LENOVO_INB, 
    CAST(CASE WHEN LTRIM(RTRIM(B.LENOVO_OUT)) = '' THEN '0' ELSE B.LENOVO_OUT END AS INTEGER) AS LENOVO_OUT, 
    B.OPEN_DATE, B.PROD, 
    LTRIM(RTRIM(B.SERIAL)) AS SERIAL,
    B.WORKGROUP, 
    CASE WHEN SUBSTR ( B.PROGENITOR, 1, 3 ) != '000' THEN SUBSTR( B.PROGENITOR, 1, 2 ) || '-' || SUBSTR( B.PROGENITOR, 3, 5 ) END AS NSS_CALL_NUM,
    LTRIM(RTRIM(B.LIAB_IND)) AS LIAB_IND
    FROM CS.ICPM_CUR_DOC04 A JOIN CS.ICPM_TSP04 B ON A.DOCNUM=B.DOCNUM AND A.FILE_SEQUENCE_NO=B.FILE_SEQUENCE_NO
    WHERE (B.CLOSE_DATE &lt;= (SELECT PERIOD_END_DTE FROM PERIOD) AND B.CLOSE_DATE &gt;= (SELECT PERIOD_START_DTE FROM PERIOD) )
    OR ((B.OPEN_DATE &lt;= (SELECT PERIOD_END_DTE FROM PERIOD) AND B.OPEN_DATE &gt;= (SELECT PERIOD_START_DTE FROM PERIOD) ) AND B.CLOSE_CODE='CANDEP' AND B.CUST_NAME='SDE')
    ),
    
    UNIQUE_NSS_CALL_NUM(NSS_CALL_NUM, ICPM_DOCNUM, PROD, SERIAL) AS (
    SELECT DISTINCT NSS_CALL_NUM, ICPM_DOCNUM, PROD, SERIAL FROM ICPM_TSP
    ), 
    
    QSAR_DATA (ICPM_DOCNUM, SERVCODE) AS (
    SELECT A.ICPM_DOCNUM, C.SERVCODE
    FROM UNIQUE_NSS_CALL_NUM A JOIN CS.CPN_LINK04 B ON A.NSS_CALL_NUM = B.NSS_CALL_NUM 
    JOIN CS.INCIDENT_HW04 C ON C.DOCNUM=B.DOCNUM 
    WHERE C.SERVCODE IN ('33', '44') 
    AND C.KINDCALL= '1'
    AND (A.PROD = C.MACH OR A.SERIAL = C.SERIAL)
    ), 
    
    MACHINE_REFERENCE (PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY)AS (
    SELECT 
    CASE WHEN SERIESNAME = 'SMC' THEN 'SMC' ELSE
    CASE UCASE(BRAND)
      WHEN 'DESKTOP' THEN 'PRODUCT'
      WHEN 'FEATURE/OPTION' THEN 'PRODUCT'
      WHEN 'MOBILE' THEN 'PRODUCT'
      WHEN 'NETBOOK' THEN 'PRODUCT'
      WHEN 'SERVER' THEN 'LP'
      WHEN 'VISUAL MONITOR' THEN 'PRODUCT'
      WHEN 'WORKSTATION' THEN 'ADV WKST' END END AS PROD_LINE, 
    MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY
    FROM CS.LEN_MACH04 WHERE IS_VALID = 'Y'
    ), 
    
    SDF_1(SDF, PHASE1, PHASE1_DUR, TOT_MONTHS) AS (
    SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER), TOT_MONTHS FROM 
    CS.PEW_SDF04 WHERE PHASE = '1'
    ), 
    SDF_2(SDF, PHASE2, PHASE2_DUR) AS (
    SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER) FROM 
    CS.PEW_SDF04 WHERE PHASE = '2'
    ), 
    SDF_3(SDF, PHASE3, PHASE3_DUR) AS (
    SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER) FROM 
    CS.PEW_SDF04 WHERE PHASE = '3'
    ), 
    SDF_4(SDF, PHASE4, PHASE4_DUR) AS (
    SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER) FROM 
    CS.PEW_SDF04 WHERE PHASE = '4'
    ), 
    SDF_ALL(SDF, TOT_MONTHS, PHASE1, PHASE1_DUR, PHASE2, PHASE2_DUR, PHASE3, PHASE3_DUR, PHASE4, PHASE4_DUR) AS (
    SELECT A.SDF, A.TOT_MONTHS,  
    PHASE1, CASE WHEN PHASE1_DUR IS NULL THEN 0 ELSE PHASE1_DUR END AS PHASE1_DUR, 
    PHASE2, CASE WHEN PHASE2_DUR IS NULL THEN 0 ELSE PHASE2_DUR END AS PHASE2_DUR, 
    PHASE3, CASE WHEN PHASE3_DUR IS NULL THEN 0 ELSE PHASE3_DUR END AS PHASE3_DUR, 
    PHASE4, CASE WHEN PHASE4_DUR IS NULL THEN 0 ELSE PHASE4_DUR END AS PHASE4_DUR
    FROM SDF_1 A LEFT JOIN SDF_2 B ON A.SDF = B.SDF LEFT JOIN SDF_3 C ON A.SDF = C.SDF LEFT JOIN SDF_4 D ON A.SDF = D.SDF
    ), 
    
    ICPM_PEW_MACH (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF) AS (
    SELECT 
    A.ICPM_DOCNUM, A.CLOSE_CODE, A.CLOSE_DATE, A.CUST_NAME, A.CUST_ST, A.CUST_ZIP, A.ECCO_ID, A.ENTRY_EMP, LENOVO_INB, A.LENOVO_OUT, A.OPEN_DATE, A.PROD, A.SERIAL, A.WORKGROUP, A.NSS_CALL_NUM, A.LIAB_IND,
    B.SERVCODE, 
    C.PROD_LINE, C.MACH, C.BRAND, C.IS_VALID, C.SERIESNAME, C.LIABILITY,
    D.MA_SDF, D.SDF, D.SERV_START_DATE, D.SERV_END_DATE, D.WAR_EXP_DATE, D.SHIP_DATE, 
    CASE WHEN D.SERV_END_DATE IS NOT NULL THEN D.SERV_END_DATE ELSE D.WAR_EXP_DATE END AS EFFECTIVE_WAR_EXP, 
    CASE WHEN D.MA_SDF IS NOT NULL THEN D.MA_SDF ELSE D.SDF END AS EFFECTIVE_SDF
    FROM  ICPM_TSP A LEFT JOIN QSAR_DATA B ON A.ICPM_DOCNUM = B.ICPM_DOCNUM
    LEFT JOIN MACHINE_REFERENCE C ON A.PROD = C.MACH
    LEFT JOIN CS.PEW_INVENTORY04 D ON A.PROD || A.SERIAL = D.MACH_SERIAL
    WHERE C.IS_VALID = 'Y' OR UCASE(A.PROD) = 'INFO'
    ),
    
    ICPM_PEW_MACH_SDF_CALC (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, PHASE_CALC) AS (
    SELECT ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, A.SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, 
    CASE WHEN (EFFECTIVE_SDF IS NOT NULL AND CLOSE_DATE IS NOT NULL) THEN 
      CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE1_DUR MONTHS THEN PHASE1 ELSE 
      CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE2_DUR MONTHS THEN PHASE2 ELSE 
      CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE3_DUR MONTHS THEN PHASE3 ELSE 
      CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE4_DUR MONTHS THEN PHASE4 ELSE 
      CASE WHEN PHASE4_DUR != 0 THEN PHASE4 ELSE 
      CASE WHEN PHASE3_DUR != 0 THEN PHASE3 ELSE 
      CASE WHEN PHASE2_DUR != 0 THEN PHASE2 ELSE 
      CASE WHEN PHASE1_DUR != 0 OR (PHASE1_DUR = 0 AND TOT_MONTHS = '000') THEN PHASE1 END END END END END END END END END AS  PHASE_CALC
    FROM ICPM_PEW_MACH A LEFT JOIN SDF_ALL B ON A.SDF = B.SDF
    ), 
    
    TABLE_DATA (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV) AS (
    SELECT ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, A.SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, 
    B.RESP_INDICATOR, B.CVG_DAYS, B.SRV_DELIV
    FROM ICPM_PEW_MACH_SDF_CALC A LEFT JOIN CS.PEW_SDF04 B ON A.EFFECTIVE_SDF = B.SDF AND A.PHASE_CALC = B.PHASE
    ), 
    
    TABLE_DATA_CALC1 (COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT, COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV) AS (
    SELECT
    CASE WHEN POSSTR (CUST_NAME, '#') &gt; 1 THEN LTRIM(RTRIM(SUBSTR ( CUST_NAME, 1,  POSSTR (CUST_NAME, '#') -1))) ELSE
      CASE WHEN POSSTR (CUST_NAME, 'RB ') &gt; 0 OR POSSTR (CUST_NAME, 'ROYAL BANK') &gt; 0 OR  POSSTR (CUST_NAME, 'RB-') &gt; 0 OR POSSTR (CUST_NAME, 'RBC ') &gt; 0 OR CUST_NAME = 'RBC' THEN 'RB' ELSE 
      CASE WHEN POSSTR (CUST_NAME, 'BANK OF NOVA SCOTIA') &gt; 0 OR POSSTR (CUST_NAME, 'SCOTIABANK') &gt; 0 OR POSSTR (CUST_NAME, 'BNS') &gt; 0 THEN 'BNS' ELSE
      CASE WHEN POSSTR (CUST_NAME, 'SYMCOR') &gt; 0 THEN 'SYMCOR'  ELSE
      CASE WHEN POSSTR (CUST_NAME, 'TD ') = 1 OR POSSTR (CUST_NAME, 'TD/') = 1 OR CUST_NAME = 'TD' OR POSSTR (CUST_NAME, 'TDCANADA') &gt; 0 OR POSSTR (CUST_NAME, 'TD CANADA') &gt; 0 OR POSSTR (CUST_NAME, 'TDBANK') &gt; 0 THEN 'TD'
      END END END END END AS COMPUTED_CUST_NAME, 
        
    CASE WHEN EFFECTIVE_SDF = 'LNV' THEN 'Y' ELSE 'N' END AS LENOVO_INTERNAL_IND, 
    CASE WHEN CLOSE_CODE != 'OUTBNDCALL' AND LENOVO_INB = 0 THEN 1 ELSE LENOVO_INB END AS COMPUTED_INBOUND_COUNT, 
    CASE WHEN (CLOSE_CODE = 'OUTBNDCALL' AND LENOVO_OUT = 0) OR (CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL AND LENOVO_OUT = 0) THEN 1 ELSE LENOVO_OUT END AS COMPUTED_OUTBOUND_COUNT, 
    CASE WHEN POSSTR (CLOSE_CODE, 'CANDEP') &gt; 0  AND CLOSE_DATE IS NOT NULL THEN 'Y' ELSE 'N' END AS DEP_IND, 
    CASE WHEN POSSTR (CLOSE_CODE, 'CRU') &gt; 0 THEN 'Y' ELSE 'N' END AS CRU_IND, 
    CASE WHEN POSSTR (CLOSE_CODE, 'ONS') &gt; 0 OR POSSTR (CLOSE_CODE, 'VDR') &gt; 0 THEN 'Y' ELSE 'N' END AS ONS_IND, 
    CASE WHEN PROD = 'INFO' THEN 'Y' ELSE 'N' END AS INFO_IND, 
    
    UCASE (CASE UCASE(BRAND)
      WHEN 'DESKTOP' THEN BRAND
      WHEN 'FEATURE/OPTION' THEN 'OPTION'
      WHEN 'MOBILE' THEN BRAND
      WHEN 'NETBOOK' THEN 'MOBILE'
      WHEN 'SERVER' THEN BRAND
      WHEN 'VISUAL MONITOR' THEN 'DESKTOP'
      WHEN 'WORKSTATION' THEN 'DESKTOP' END ) AS PROD_CATEGORY, 
    
    CASE WHEN RESP_INDICATOR = 'H' AND CVG_DAYS = '7' THEN '724' ELSE 
      CASE WHEN RESP_INDICATOR = 'H' AND CVG_DAYS = '5' THEN 'SBD' ELSE 
      CASE WHEN RESP_INDICATOR = 'D'  THEN 'NBD' ELSE 'NA' END END END AS RESP_ENTITLEMENT, 
    
    CASE WHEN SUBSTR(CLOSE_CODE, 1, 3) = 'CRU' OR SUBSTR(CLOSE_CODE, 1, 5) = 'TSONS' THEN SUBSTR(CLOSE_CODE, LENGTH(CLOSE_CODE) -2, 3)  END AS ICPM_RESP_ENTITLEMENT, 
    
    CASE UCASE(SRV_DELIV)
      WHEN 'CCE' THEN 'DEP'
      WHEN 'CCI' THEN 'DEP'
      WHEN 'CCR' THEN 'DEP'
      WHEN 'CPU' THEN ' '
      WHEN 'CRU' THEN 'CRU' 
      WHEN 'DNL' THEN ' '
      WHEN 'DPT' THEN 'DEP'
      WHEN 'EXC' THEN 'DEP'
      WHEN 'EXP' THEN 'DEP'
      WHEN 'EXV' THEN 'DEP'
      WHEN 'EZS' THEN 'DEP'
      WHEN 'ICE' THEN 'DEP'
      WHEN 'ICS' THEN 'DEP'
      WHEN 'IOE' THEN 'ONS'
      WHEN 'IOL' THEN 'ONS'
      WHEN 'IOR' THEN 'ONS'
      WHEN 'NMS' THEN 'DEP'
      WHEN 'NON' THEN 'DEP'
      WHEN 'PAR' THEN 'Parts'
      WHEN 'TBD' THEN ' ' END  AS SRV_DELIV_DECODE, 
    
    CASE WHEN LIABILITY = 'LENOVO' OR (UCASE(SUBSTR(SERIAL, 1, 1)) = 'L' AND LIABILITY = 'SHARED') OR EFFECTIVE_WAR_EXP IS NOT NULL OR LIAB_IND = 'LEN' THEN 'Y' ELSE 'N' END AS LIABILITY_IND,
    
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    FROM TABLE_DATA
    ),
    
    TABLE_DATA_CALC2 (
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    ) AS (
    SELECT 
    
    CASE WHEN OPEN_DATE &lt;= EFFECTIVE_WAR_EXP OR LENOVO_INTERNAL_IND = 'Y' THEN 'Y' ELSE 'N' END AS WARRANTY_IND, 
    CASE WHEN LIABILITY_IND = 'Y' AND ((COMPUTED_CUST_NAME = 'RB' OR ECCO_ID = '0815512') OR  (COMPUTED_CUST_NAME = 'BNS' OR ECCO_ID = '0502761') OR (COMPUTED_CUST_NAME = 'SYMCOR' OR ECCO_ID = '0038819') OR (COMPUTED_CUST_NAME = 'TD' OR ECCO_ID = '0893619')) THEN 'Y' ELSE 'N' END AS CUSTOMER_EXCEPTION, 
    CASE WHEN (CLOSE_CODE != 'NOHWDISP' AND PROD != 'INFO') AND NOT (CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) THEN 'Y' ELSE 'N' END AS INB_IND, 
    CASE WHEN (COMPUTED_OUTBOUND_COUNT &gt; 0 AND CLOSE_CODE NOT IN ('NOHWDISP', 'TPPCALL') AND ENTRY_EMP != 'ECI') OR (COMPUTED_OUTBOUND_COUNT &gt; 0 AND CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL AND CUST_NAME = 'SDE') THEN 'Y' ELSE 'N' END AS OUB_IND, 
    CASE WHEN INFO_IND = 'Y' THEN COMPUTED_INBOUND_COUNT ELSE 0 END AS INFO_COUNT, 
    CASE WHEN (ONS_IND = 'Y' AND SRV_DELIV_DECODE != 'ONS') OR (DEP_IND = 'Y' AND SRV_DELIV_DECODE != 'DEP') THEN 'Y' ELSE 'N' END AS SERV_DELIV_MISMATCH, 
    CASE WHEN INFO_IND = 'Y' THEN PROD END AS RCS_CATEGORY, 
    
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    FROM TABLE_DATA_CALC1
    ), 
    
    TABLE_DATA_CALC3(
    CUSTOMER_EXCEPTION_TYPE, INB_COUNT, OUB_COUNT, COMPUTED_RESP_ENTITLEMENT, 
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    ) AS (
    
    SELECT 
    CASE WHEN CUSTOMER_EXCEPTION = 'Y' THEN CASE WHEN ((COMPUTED_CUST_NAME = 'RB' OR ECCO_ID = '0815512') AND (WARRANTY_IND = 'N')) THEN 'RB1' ELSE 
      CASE WHEN ((COMPUTED_CUST_NAME = 'RB' OR ECCO_ID = '0815512') AND (WARRANTY_IND = 'Y')) THEN 'RB2' ELSE 
      CASE WHEN (COMPUTED_CUST_NAME = 'BNS' OR ECCO_ID = '0502761') THEN 'BN1' ELSE 
      CASE WHEN (COMPUTED_CUST_NAME = 'SYMCOR' OR ECCO_ID = '0038819') THEN 'SY1'  ELSE
      CASE WHEN ((COMPUTED_CUST_NAME = 'TD' OR ECCO_ID = '0893619') AND (WARRANTY_IND = 'N')) THEN 'TD1' ELSE 
      CASE WHEN ((COMPUTED_CUST_NAME = 'TD' OR ECCO_ID = '0893619') AND (WARRANTY_IND = 'Y')) THEN 'TD2' 
      END END END END END END END AS CUSTOMER_EXCEPTION_TYPE, 
    
    CASE WHEN INB_IND = 'Y' THEN COMPUTED_INBOUND_COUNT ELSE 0 END AS INB_COUNT, 
    CASE WHEN OUB_IND = 'Y' THEN COMPUTED_OUTBOUND_COUNT ELSE 0 END AS OUB_COUNT, 
    CASE WHEN (CUSTOMER_EXCEPTION ='Y' OR WARRANTY_IND = 'N') AND ICPM_RESP_ENTITLEMENT IS NOT NULL THEN ICPM_RESP_ENTITLEMENT ELSE RESP_ENTITLEMENT END AS COMPUTED_RESP_ENTITLEMENT, 
    
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
     ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    FROM TABLE_DATA_CALC2
    ),
    
    TABLE_DATA_CALC4(
    LLI, WW11, WW2A, WW4A, WWS1, WWNA, WW12, WW13, WWNC, WWNE, WWNH, WWNI, WW14, WW15, WW2M, WW4B, WWS2, WW16, WW17, WW31, WW4C, WW2C, WWS4, WW32, WW4E, WW2D, WWS5, WW33, WW4F, WW2E, WWS6, 
    CUSTOMER_EXCEPTION_TYPE, INB_COUNT, OUB_COUNT, COMPUTED_RESP_ENTITLEMENT, 
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
     ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    ) AS (
    
    SELECT 
    
    CASE WHEN CUSTOMER_EXCEPTION = 'Y' AND (WARRANTY_IND = 'N' OR SERV_DELIV_MISMATCH = 'Y' OR SERVCODE IS NOT NULL) THEN CUSTOMER_EXCEPTION_TYPE ELSE 'L00' END AS LLI, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_CATEGORY = 'MOBILE' AND PROD_LINE = 'PRODUCT' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WW11, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'LP' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WW2A, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'ADV WKST' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WW4A, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'SMC' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWS1, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_CATEGORY= 'MOBILE' AND PROD_LINE = 'PRODUCT' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNA, 
    
    CASE WHEN INFO_IND = 'Y' AND PROD_CATEGORY IS NULL OR PROD_CATEGORY != 'DESKTOP' THEN INFO_COUNT ELSE 0 END AS WW12, 
    
    CASE WHEN INB_IND = 'Y' AND WARRANTY_IND = 'Y'  AND PROD_CATEGORY IN ('DESKTOP', 'OPTION') AND PROD_LINE = 'PRODUCT' THEN INB_COUNT ELSE 0 END AS WW13, 
    
    CASE WHEN INB_IND = 'Y' AND WARRANTY_IND = 'N'  AND PROD_CATEGORY IN ('DESKTOP', 'OPTION') AND PROD_LINE = 'PRODUCT' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNC, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'ADV WKST' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNE, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'LP' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNH, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'SMC' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNI, 
    
    CASE WHEN INFO_IND = 'Y' AND PROD_CATEGORY = 'DESKTOP' THEN INFO_COUNT ELSE 0 END AS WW14, 
    
    CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL)  OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'PRODUCT' THEN OUB_COUNT ELSE 0 END AS WW15, 
    
    CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'LP' THEN OUB_COUNT ELSE 0 END AS WW2M, 
    
    CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'ADV WKST' THEN OUB_COUNT ELSE 0 END AS WW4B, 
    
    CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'SMC' THEN OUB_COUNT ELSE 0 END AS WWS2, 
    
    CASE WHEN CRU_IND = 'Y' AND (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y' OR LIABILITY_IND = 'Y')  AND PROD_LINE IN ('PRODUCT', 'ADV WKST') AND UCASE(BRAND) != 'VISUAL MONITOR' THEN 1 ELSE 0 END AS WW16, 

    CASE WHEN CRU_IND = 'Y' AND UCASE(BRAND) = 'VISUAL MONITOR' THEN 1 ELSE 0 END AS WW17, 

    CASE WHEN PROD_LINE = 'PRODUCT' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW31, 
    
    CASE WHEN PROD_LINE = 'ADV WKST' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW4C, 
    
    CASE WHEN PROD_LINE = 'LP' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW2C, 
    
    CASE WHEN PROD_LINE = 'SMC' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WWS4, 
    
    
    CASE WHEN PROD_LINE = 'PRODUCT' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW32, 
    
    
    CASE WHEN PROD_LINE = 'ADV WKST' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW4E, 
    
    CASE WHEN PROD_LINE = 'LP' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW2D, 
    
    CASE WHEN PROD_LINE = 'SMC' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WWS5, 
    
    CASE WHEN PROD_LINE = 'PRODUCT' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW33, 
    
    CASE WHEN PROD_LINE = 'ADV WKST' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW4F, 
    
    CASE WHEN PROD_LINE = 'LP' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW2E, 
    
    CASE WHEN PROD_LINE = 'SMC' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WWS6, 
    
    
    
    CUSTOMER_EXCEPTION_TYPE, INB_COUNT, OUB_COUNT, COMPUTED_RESP_ENTITLEMENT, 
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV 
    
    FROM TABLE_DATA_CALC3
    ), 
    
    FINAL_RCS(&quot;MACHINE TYPE&quot;, &quot;RCS SERIAL&quot;, LLI, &quot;PROBLEM NUMBER&quot;, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;TRANSACTION COUNT&quot;, PROVINCE, &quot;SERV PERFORMED DATE&quot;, &quot;NSS CALL NUM&quot;, &quot;CALL RECD DATE&quot;, &quot;DATA SOURCE&quot;, BRAND, &quot;RCS CATEGORY&quot;, COMPANY_NAME, DEBUG_CATEGORY) AS (
    
    SELECT 
    PROD, SERIAL, LLI, ICPM_DOCNUM, CUST_ZIP, 
    '649', 
    CASE WHEN WW11 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001350' ELSE 'C0001275' END ELSE 
      CASE WHEN WW2A &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001593' ELSE 'C0001563' END ELSE
      CASE WHEN WW4A &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001594' ELSE 'C0001564' END ELSE
      CASE WHEN WWS1 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001614' ELSE 'C0001601' END ELSE
      CASE WHEN WWNA &gt; 0 THEN 'C0001642' ELSE
      CASE WHEN WW12 &gt; 0 THEN 'C0001385'ELSE
      CASE WHEN WW13 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001351' ELSE 'C0001276' END ELSE
      CASE WHEN WWNC &gt; 0 THEN 'C0001643' ELSE
      CASE WHEN WWNE &gt; 0 THEN 'C0001644' ELSE
      CASE WHEN WWNH &gt; 0 THEN 'C0001645' ELSE
      CASE WHEN WWNI &gt; 0 THEN 'C0001646' ELSE
      CASE WHEN WW14 &gt; 0 THEN 'C0001386'
      END END END END END END END END END END END END, 
    WW11 + WW2A + WW4A + WWS1 + WWNA + WW12 + WW13 + WWNC + WWNE + WWNH + WWNI + WW14, 
    CUST_ST, CLOSE_DATE, NSS_CALL_NUM, CLOSE_DATE, 
    'AG', 
    BRAND, RCS_CATEGORY, 
    CUST_NAME AS COMPANY_NAME,
    'INBOUND-INFO' AS DEBUG_CATEGORY
    FROM TABLE_DATA_CALC4
    WHERE WW11 + WW2A + WW4A + WWS1 + WWNA + WW12 + WW13 + WWNC + WWNE + WWNH + WWNI + WW14 &gt; 0
    
    UNION ALL
    
    SELECT PROD, SERIAL, LLI, ICPM_DOCNUM, CUST_ZIP, 
    '649', 
    CASE WHEN WW15 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001352' ELSE 'C0001277' END ELSE 
      CASE WHEN WW2M &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001596' ELSE 'C0001566' END ELSE
      CASE WHEN WW4B &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001597' ELSE 'C0001567' END ELSE
      CASE WHEN WWS2 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001615' ELSE 'C0001603' END
      END END END END, 
    WW15 + WW2M + WW4B + WWS2, 
    CUST_ST, 
    CASE WHEN CLOSE_DATE IS NULL THEN OPEN_DATE ELSE CLOSE_DATE END, 
    NSS_CALL_NUM, CLOSE_DATE, 
    'AG', 
    BRAND, RCS_CATEGORY,
    CUST_NAME AS COMPANY_NAME,
    'OUTBOUND' AS DEBUG_CATEGORY
    FROM TABLE_DATA_CALC4
    WHERE WW15 + WW2M + WW4B + WWS2 &gt; 0
    
    UNION ALL
    
    SELECT 
    PROD, SERIAL, LLI, ICPM_DOCNUM, CUST_ZIP, 
    '649', 
    CASE WHEN WW16 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001353' ELSE 'C0001278' END ELSE 
    CASE WHEN WW17 &gt; 0 THEN 'C0001292' END END, 
    WW16 + WW17, 
    CUST_ST, CLOSE_DATE, NSS_CALL_NUM, CLOSE_DATE, 
    'AG', 
    BRAND, RCS_CATEGORY,
    CUST_NAME AS COMPANY_NAME,
    'CRU' AS DEBUG_CATEGORY
    FROM TABLE_DATA_CALC4
    WHERE WW16 + WW17 &gt; 0
    ), 
    
    FINAL_BF(&quot;MACHINE TYPE&quot;, &quot;BF SERIAL&quot;, LLI, &quot;SERVICE DATE&quot;, &quot;PROBLEM NUMBER&quot;, ECA, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;TRANSACTION COUNT&quot;, PROVINCE, &quot;SERV PERFORMED DATE&quot;, &quot;NSS CALL NUM&quot;, &quot;CALL RECD DATE&quot;, &quot;DATA SOURCE&quot;, COMPANY_NAME) AS (
    SELECT 
    PROD, SERIAL, LLI, CLOSE_DATE, ICPM_DOCNUM, 
    '', 
    CUST_ZIP, 
    '649', 
    CASE WHEN WW31 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001354' ELSE 'C0001279' END ELSE 
      CASE WHEN WW4C &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001620' ELSE 'C0001607' END ELSE
      CASE WHEN WW2C &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001585' ELSE 'C0001555' END ELSE
      CASE WHEN WWS4 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001617' ELSE 'C0001604' END ELSE
      CASE WHEN WW32 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001355' ELSE 'C0001280' END ELSE
      CASE WHEN WW4E &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001621' ELSE 'C0001608' END ELSE
      CASE WHEN WW2D &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001586' ELSE 'C0001556' END ELSE
      CASE WHEN WWS5 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001618' ELSE 'C0001605' END ELSE
      CASE WHEN WW33 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001356' ELSE 'C0001281' END ELSE
      CASE WHEN WW4F &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001622' ELSE 'C0001609' END ELSE
      CASE WHEN WW2E &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001587' ELSE 'C0001557' END ELSE
      CASE WHEN WWS6 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001619' ELSE 'C0001606' END
      END END END END END END END END END END END END, 
    
    CASE WHEN VALUE(B.AP_COUNT, 0) &gt; 0 THEN 
      AP_COUNT +  WW31 + WW4C + WW2C + WWS4 + WW32 + WW4E + WW2D + WWS5 + WW33 + WW4F + WW2E + WWS6
      ELSE WW31 + WW4C + WW2C + WWS4 + WW32 + WW4E + WW2D + WWS5 + WW33 + WW4F + WW2E + WWS6 END, 
    CUST_ST, CLOSE_DATE, A.NSS_CALL_NUM, CLOSE_DATE, 
    'BE',
    CUST_NAME AS COMPANY_NAME
    FROM TABLE_DATA_CALC4 A LEFT JOIN CS.SDMCALLSUM04 B ON A.NSS_CALL_NUM = B.NSS_CALL_NUM
    WHERE WW31 + WW4C + WW2C + WWS4 + WW32 + WW4E + WW2D + WWS5 + WW33 + WW4F + WW2E + WWS6 &gt; 0
    ),
    
    FINAL_OOW_DISCOUNT (ICPM_DOCNUM, PROD, SERIAL, EFFECTIVE_WAR_EXP, WARRANTY_IND, TOTAL_COUNT) AS (
    SELECT 
    ICPM_DOCNUM, PROD, SERIAL, EFFECTIVE_WAR_EXP, WARRANTY_IND,
    WWNA + WWNC + WWNE + WWNH + WWNI
    FROM TABLE_DATA_CALC4
    WHERE WWNA + WWNC + WWNE + WWNH + WWNI &gt; 0
    )
    
    SELECT * FROM FINAL_RCS

    "/>
  </report>

   <!-- Report2: Load Location:  /lsrfeed/file_io/lsr_feed/break_fix/new_transaction/ -->
  <report includeHeader="Db2Header">
    <fileName text="icpm_load_bf.csv" />
    <dateFormat text="YYYY/MM/DD" />
    <timeFormat text="HH:MM:SS" />
     <SQL text="
    WITH PERIOD(PERIOD_END_DTE, PERIOD_START_DTE) AS (
    SELECT MIN(PERIOD_END_DTE), MIN(PERIOD_START_DTE) FROM CS.LEN_PERIOD_DATES04 
    WHERE LEN_DATA_REC = 'N' 
    ), 
    
    ICPM_TSP (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND) AS (
    SELECT A.DOCNUM, 
    LTRIM(RTRIM(B.CLOSE_CODE)), 
    B.CLOSE_DATE, 
    LTRIM(RTRIM(UPPER(B.CUST_NAME))), 
    B.CUST_ST, B.CUST_ZIP, B.ECCO_ID, B.ENTRY_EMP, 
    CAST(CASE WHEN LTRIM(RTRIM(B.LENOVO_INB)) = '' THEN '0' ELSE B.LENOVO_INB END AS INTEGER) AS LENOVO_INB, 
    CAST(CASE WHEN LTRIM(RTRIM(B.LENOVO_OUT)) = '' THEN '0' ELSE B.LENOVO_OUT END AS INTEGER) AS LENOVO_OUT, 
    B.OPEN_DATE, B.PROD, 
    LTRIM(RTRIM(B.SERIAL)) AS SERIAL,
    B.WORKGROUP, 
    CASE WHEN SUBSTR ( B.PROGENITOR, 1, 3 ) != '000' THEN SUBSTR( B.PROGENITOR, 1, 2 ) || '-' || SUBSTR( B.PROGENITOR, 3, 5 ) END AS NSS_CALL_NUM,
    LTRIM(RTRIM(B.LIAB_IND)) AS LIAB_IND
    FROM CS.ICPM_CUR_DOC04 A JOIN CS.ICPM_TSP04 B ON A.DOCNUM=B.DOCNUM AND A.FILE_SEQUENCE_NO=B.FILE_SEQUENCE_NO
    WHERE (B.CLOSE_DATE &lt;= (SELECT PERIOD_END_DTE FROM PERIOD) AND B.CLOSE_DATE &gt;= (SELECT PERIOD_START_DTE FROM PERIOD) )
    OR ((B.OPEN_DATE &lt;= (SELECT PERIOD_END_DTE FROM PERIOD) AND B.OPEN_DATE &gt;= (SELECT PERIOD_START_DTE FROM PERIOD) ) AND B.CLOSE_CODE='CANDEP' AND B.CUST_NAME='SDE')
    ),
    
    UNIQUE_NSS_CALL_NUM(NSS_CALL_NUM, ICPM_DOCNUM, PROD, SERIAL) AS (
    SELECT DISTINCT NSS_CALL_NUM, ICPM_DOCNUM, PROD, SERIAL FROM ICPM_TSP
    ), 
    
    QSAR_DATA (ICPM_DOCNUM, SERVCODE) AS (
    SELECT A.ICPM_DOCNUM, C.SERVCODE
    FROM UNIQUE_NSS_CALL_NUM A JOIN CS.CPN_LINK04 B ON A.NSS_CALL_NUM = B.NSS_CALL_NUM 
    JOIN CS.INCIDENT_HW04 C ON C.DOCNUM=B.DOCNUM 
    WHERE C.SERVCODE IN ('33', '44') 
    AND C.KINDCALL= '1'
    AND (A.PROD = C.MACH OR A.SERIAL = C.SERIAL)
    ), 
    
    MACHINE_REFERENCE (PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY)AS (
    SELECT 
    CASE WHEN SERIESNAME = 'SMC' THEN 'SMC' ELSE
    CASE UCASE(BRAND)
      WHEN 'DESKTOP' THEN 'PRODUCT'
      WHEN 'FEATURE/OPTION' THEN 'PRODUCT'
      WHEN 'MOBILE' THEN 'PRODUCT'
      WHEN 'NETBOOK' THEN 'PRODUCT'
      WHEN 'SERVER' THEN 'LP'
      WHEN 'VISUAL MONITOR' THEN 'PRODUCT'
      WHEN 'WORKSTATION' THEN 'ADV WKST' END END AS PROD_LINE, 
    MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY
    FROM CS.LEN_MACH04 WHERE IS_VALID = 'Y'
    ), 
    
    SDF_1(SDF, PHASE1, PHASE1_DUR, TOT_MONTHS) AS (
    SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER), TOT_MONTHS FROM 
    CS.PEW_SDF04 WHERE PHASE = '1'
    ), 
    SDF_2(SDF, PHASE2, PHASE2_DUR) AS (
    SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER) FROM 
    CS.PEW_SDF04 WHERE PHASE = '2'
    ), 
    SDF_3(SDF, PHASE3, PHASE3_DUR) AS (
    SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER) FROM 
    CS.PEW_SDF04 WHERE PHASE = '3'
    ), 
    SDF_4(SDF, PHASE4, PHASE4_DUR) AS (
    SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER) FROM 
    CS.PEW_SDF04 WHERE PHASE = '4'
    ), 
    SDF_ALL(SDF, TOT_MONTHS, PHASE1, PHASE1_DUR, PHASE2, PHASE2_DUR, PHASE3, PHASE3_DUR, PHASE4, PHASE4_DUR) AS (
    SELECT A.SDF, A.TOT_MONTHS,  
    PHASE1, CASE WHEN PHASE1_DUR IS NULL THEN 0 ELSE PHASE1_DUR END AS PHASE1_DUR, 
    PHASE2, CASE WHEN PHASE2_DUR IS NULL THEN 0 ELSE PHASE2_DUR END AS PHASE2_DUR, 
    PHASE3, CASE WHEN PHASE3_DUR IS NULL THEN 0 ELSE PHASE3_DUR END AS PHASE3_DUR, 
    PHASE4, CASE WHEN PHASE4_DUR IS NULL THEN 0 ELSE PHASE4_DUR END AS PHASE4_DUR
    FROM SDF_1 A LEFT JOIN SDF_2 B ON A.SDF = B.SDF LEFT JOIN SDF_3 C ON A.SDF = C.SDF LEFT JOIN SDF_4 D ON A.SDF = D.SDF
    ), 
    
    ICPM_PEW_MACH (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF) AS (
    SELECT 
    A.ICPM_DOCNUM, A.CLOSE_CODE, A.CLOSE_DATE, A.CUST_NAME, A.CUST_ST, A.CUST_ZIP, A.ECCO_ID, A.ENTRY_EMP, LENOVO_INB, A.LENOVO_OUT, A.OPEN_DATE, A.PROD, A.SERIAL, A.WORKGROUP, A.NSS_CALL_NUM, A.LIAB_IND,
    B.SERVCODE, 
    C.PROD_LINE, C.MACH, C.BRAND, C.IS_VALID, C.SERIESNAME, C.LIABILITY,
    D.MA_SDF, D.SDF, D.SERV_START_DATE, D.SERV_END_DATE, D.WAR_EXP_DATE, D.SHIP_DATE, 
    CASE WHEN D.SERV_END_DATE IS NOT NULL THEN D.SERV_END_DATE ELSE D.WAR_EXP_DATE END AS EFFECTIVE_WAR_EXP, 
    CASE WHEN D.MA_SDF IS NOT NULL THEN D.MA_SDF ELSE D.SDF END AS EFFECTIVE_SDF
    FROM  ICPM_TSP A LEFT JOIN QSAR_DATA B ON A.ICPM_DOCNUM = B.ICPM_DOCNUM
    LEFT JOIN MACHINE_REFERENCE C ON A.PROD = C.MACH
    LEFT JOIN CS.PEW_INVENTORY04 D ON A.PROD || A.SERIAL = D.MACH_SERIAL
    WHERE C.IS_VALID = 'Y' OR UCASE(A.PROD) = 'INFO'
    ),
    
    ICPM_PEW_MACH_SDF_CALC (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, PHASE_CALC) AS (
    SELECT ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, A.SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, 
    CASE WHEN (EFFECTIVE_SDF IS NOT NULL AND CLOSE_DATE IS NOT NULL) THEN 
      CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE1_DUR MONTHS THEN PHASE1 ELSE 
      CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE2_DUR MONTHS THEN PHASE2 ELSE 
      CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE3_DUR MONTHS THEN PHASE3 ELSE 
      CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE4_DUR MONTHS THEN PHASE4 ELSE 
      CASE WHEN PHASE4_DUR != 0 THEN PHASE4 ELSE 
      CASE WHEN PHASE3_DUR != 0 THEN PHASE3 ELSE 
      CASE WHEN PHASE2_DUR != 0 THEN PHASE2 ELSE 
      CASE WHEN PHASE1_DUR != 0 OR (PHASE1_DUR = 0 AND TOT_MONTHS = '000') THEN PHASE1 END END END END END END END END END AS  PHASE_CALC
    FROM ICPM_PEW_MACH A LEFT JOIN SDF_ALL B ON A.SDF = B.SDF
    ), 
    
    TABLE_DATA (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV) AS (
    SELECT ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, A.SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, 
    B.RESP_INDICATOR, B.CVG_DAYS, B.SRV_DELIV
    FROM ICPM_PEW_MACH_SDF_CALC A LEFT JOIN CS.PEW_SDF04 B ON A.EFFECTIVE_SDF = B.SDF AND A.PHASE_CALC = B.PHASE
    ), 
    
    TABLE_DATA_CALC1 (COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT, COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV) AS (
    SELECT
    CASE WHEN POSSTR (CUST_NAME, '#') &gt; 1 THEN LTRIM(RTRIM(SUBSTR ( CUST_NAME, 1,  POSSTR (CUST_NAME, '#') -1))) ELSE
      CASE WHEN POSSTR (CUST_NAME, 'RB ') &gt; 0 OR POSSTR (CUST_NAME, 'ROYAL BANK') &gt; 0 OR  POSSTR (CUST_NAME, 'RB-') &gt; 0 OR POSSTR (CUST_NAME, 'RBC ') &gt; 0 OR CUST_NAME = 'RBC' THEN 'RB' ELSE 
      CASE WHEN POSSTR (CUST_NAME, 'BANK OF NOVA SCOTIA') &gt; 0 OR POSSTR (CUST_NAME, 'SCOTIABANK') &gt; 0 OR POSSTR (CUST_NAME, 'BNS') &gt; 0 THEN 'BNS' ELSE
      CASE WHEN POSSTR (CUST_NAME, 'SYMCOR') &gt; 0 THEN 'SYMCOR'  ELSE
      CASE WHEN POSSTR (CUST_NAME, 'TD ') = 1 OR POSSTR (CUST_NAME, 'TD/') = 1 OR CUST_NAME = 'TD' OR POSSTR (CUST_NAME, 'TDCANADA') &gt; 0 OR POSSTR (CUST_NAME, 'TD CANADA') &gt; 0 OR POSSTR (CUST_NAME, 'TDBANK') &gt; 0 THEN 'TD'
      END END END END END AS COMPUTED_CUST_NAME, 
        
    CASE WHEN EFFECTIVE_SDF = 'LNV' THEN 'Y' ELSE 'N' END AS LENOVO_INTERNAL_IND, 
    CASE WHEN CLOSE_CODE != 'OUTBNDCALL' AND LENOVO_INB = 0 THEN 1 ELSE LENOVO_INB END AS COMPUTED_INBOUND_COUNT, 
    CASE WHEN (CLOSE_CODE = 'OUTBNDCALL' AND LENOVO_OUT = 0) OR (CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL AND LENOVO_OUT = 0) THEN 1 ELSE LENOVO_OUT END AS COMPUTED_OUTBOUND_COUNT, 
    CASE WHEN POSSTR (CLOSE_CODE, 'CANDEP') &gt; 0  AND CLOSE_DATE IS NOT NULL THEN 'Y' ELSE 'N' END AS DEP_IND, 
    CASE WHEN POSSTR (CLOSE_CODE, 'CRU') &gt; 0 THEN 'Y' ELSE 'N' END AS CRU_IND, 
    CASE WHEN POSSTR (CLOSE_CODE, 'ONS') &gt; 0 OR POSSTR (CLOSE_CODE, 'VDR') &gt; 0 THEN 'Y' ELSE 'N' END AS ONS_IND, 
    CASE WHEN PROD = 'INFO' THEN 'Y' ELSE 'N' END AS INFO_IND, 
    
    UCASE (CASE UCASE(BRAND)
      WHEN 'DESKTOP' THEN BRAND
      WHEN 'FEATURE/OPTION' THEN 'OPTION'
      WHEN 'MOBILE' THEN BRAND
      WHEN 'NETBOOK' THEN 'MOBILE'
      WHEN 'SERVER' THEN BRAND
      WHEN 'VISUAL MONITOR' THEN 'DESKTOP'
      WHEN 'WORKSTATION' THEN 'DESKTOP' END ) AS PROD_CATEGORY, 
    
    CASE WHEN RESP_INDICATOR = 'H' AND CVG_DAYS = '7' THEN '724' ELSE 
      CASE WHEN RESP_INDICATOR = 'H' AND CVG_DAYS = '5' THEN 'SBD' ELSE 
      CASE WHEN RESP_INDICATOR = 'D'  THEN 'NBD' ELSE 'NA' END END END AS RESP_ENTITLEMENT, 
    
    CASE WHEN SUBSTR(CLOSE_CODE, 1, 3) = 'CRU' OR SUBSTR(CLOSE_CODE, 1, 5) = 'TSONS' THEN SUBSTR(CLOSE_CODE, LENGTH(CLOSE_CODE) -2, 3)  END AS ICPM_RESP_ENTITLEMENT, 
    
    CASE UCASE(SRV_DELIV)
      WHEN 'CCE' THEN 'DEP'
      WHEN 'CCI' THEN 'DEP'
      WHEN 'CCR' THEN 'DEP'
      WHEN 'CPU' THEN ' '
      WHEN 'CRU' THEN 'CRU' 
      WHEN 'DNL' THEN ' '
      WHEN 'DPT' THEN 'DEP'
      WHEN 'EXC' THEN 'DEP'
      WHEN 'EXP' THEN 'DEP'
      WHEN 'EXV' THEN 'DEP'
      WHEN 'EZS' THEN 'DEP'
      WHEN 'ICE' THEN 'DEP'
      WHEN 'ICS' THEN 'DEP'
      WHEN 'IOE' THEN 'ONS'
      WHEN 'IOL' THEN 'ONS'
      WHEN 'IOR' THEN 'ONS'
      WHEN 'NMS' THEN 'DEP'
      WHEN 'NON' THEN 'DEP'
      WHEN 'PAR' THEN 'Parts'
      WHEN 'TBD' THEN ' ' END  AS SRV_DELIV_DECODE, 
    
    CASE WHEN LIABILITY = 'LENOVO' OR (UCASE(SUBSTR(SERIAL, 1, 1)) = 'L' AND LIABILITY = 'SHARED') OR EFFECTIVE_WAR_EXP IS NOT NULL OR LIAB_IND = 'LEN' THEN 'Y' ELSE 'N' END AS LIABILITY_IND,
    
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    FROM TABLE_DATA
    ),
    
    TABLE_DATA_CALC2 (
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    ) AS (
    SELECT 
    
    CASE WHEN OPEN_DATE &lt;= EFFECTIVE_WAR_EXP OR LENOVO_INTERNAL_IND = 'Y' THEN 'Y' ELSE 'N' END AS WARRANTY_IND, 
    CASE WHEN LIABILITY_IND = 'Y' AND ((COMPUTED_CUST_NAME = 'RB' OR ECCO_ID = '0815512') OR  (COMPUTED_CUST_NAME = 'BNS' OR ECCO_ID = '0502761') OR (COMPUTED_CUST_NAME = 'SYMCOR' OR ECCO_ID = '0038819') OR (COMPUTED_CUST_NAME = 'TD' OR ECCO_ID = '0893619')) THEN 'Y' ELSE 'N' END AS CUSTOMER_EXCEPTION, 
    CASE WHEN (CLOSE_CODE != 'NOHWDISP' AND PROD != 'INFO') AND NOT (CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) THEN 'Y' ELSE 'N' END AS INB_IND, 
    CASE WHEN (COMPUTED_OUTBOUND_COUNT &gt; 0 AND CLOSE_CODE NOT IN ('NOHWDISP', 'TPPCALL') AND ENTRY_EMP != 'ECI') OR (COMPUTED_OUTBOUND_COUNT &gt; 0 AND CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL AND CUST_NAME = 'SDE') THEN 'Y' ELSE 'N' END AS OUB_IND, 
    CASE WHEN INFO_IND = 'Y' THEN COMPUTED_INBOUND_COUNT ELSE 0 END AS INFO_COUNT, 
    CASE WHEN (ONS_IND = 'Y' AND SRV_DELIV_DECODE != 'ONS') OR (DEP_IND = 'Y' AND SRV_DELIV_DECODE != 'DEP') THEN 'Y' ELSE 'N' END AS SERV_DELIV_MISMATCH, 
    CASE WHEN INFO_IND = 'Y' THEN PROD END AS RCS_CATEGORY, 
    
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    FROM TABLE_DATA_CALC1
    ), 
    
    TABLE_DATA_CALC3(
    CUSTOMER_EXCEPTION_TYPE, INB_COUNT, OUB_COUNT, COMPUTED_RESP_ENTITLEMENT, 
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    ) AS (
    
    SELECT 
    CASE WHEN CUSTOMER_EXCEPTION = 'Y' THEN CASE WHEN ((COMPUTED_CUST_NAME = 'RB' OR ECCO_ID = '0815512') AND (WARRANTY_IND = 'N')) THEN 'RB1' ELSE 
      CASE WHEN ((COMPUTED_CUST_NAME = 'RB' OR ECCO_ID = '0815512') AND (WARRANTY_IND = 'Y')) THEN 'RB2' ELSE 
      CASE WHEN (COMPUTED_CUST_NAME = 'BNS' OR ECCO_ID = '0502761') THEN 'BN1' ELSE 
      CASE WHEN (COMPUTED_CUST_NAME = 'SYMCOR' OR ECCO_ID = '0038819') THEN 'SY1'  ELSE
      CASE WHEN ((COMPUTED_CUST_NAME = 'TD' OR ECCO_ID = '0893619') AND (WARRANTY_IND = 'N')) THEN 'TD1' ELSE 
      CASE WHEN ((COMPUTED_CUST_NAME = 'TD' OR ECCO_ID = '0893619') AND (WARRANTY_IND = 'Y')) THEN 'TD2' 
      END END END END END END END AS CUSTOMER_EXCEPTION_TYPE, 
    
    CASE WHEN INB_IND = 'Y' THEN COMPUTED_INBOUND_COUNT ELSE 0 END AS INB_COUNT, 
    CASE WHEN OUB_IND = 'Y' THEN COMPUTED_OUTBOUND_COUNT ELSE 0 END AS OUB_COUNT, 
    CASE WHEN (CUSTOMER_EXCEPTION ='Y' OR WARRANTY_IND = 'N') AND ICPM_RESP_ENTITLEMENT IS NOT NULL THEN ICPM_RESP_ENTITLEMENT ELSE RESP_ENTITLEMENT END AS COMPUTED_RESP_ENTITLEMENT, 
    
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
     ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    FROM TABLE_DATA_CALC2
    ),
    
    TABLE_DATA_CALC4(
    LLI, WW11, WW2A, WW4A, WWS1, WWNA, WW12, WW13, WWNC, WWNE, WWNH, WWNI, WW14, WW15, WW2M, WW4B, WWS2, WW16, WW17, WW31, WW4C, WW2C, WWS4, WW32, WW4E, WW2D, WWS5, WW33, WW4F, WW2E, WWS6, 
    CUSTOMER_EXCEPTION_TYPE, INB_COUNT, OUB_COUNT, COMPUTED_RESP_ENTITLEMENT, 
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
     ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
    ) AS (
    
    SELECT 
    
    CASE WHEN CUSTOMER_EXCEPTION = 'Y' AND (WARRANTY_IND = 'N' OR SERV_DELIV_MISMATCH = 'Y' OR SERVCODE IS NOT NULL) THEN CUSTOMER_EXCEPTION_TYPE ELSE 'L00' END AS LLI, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_CATEGORY = 'MOBILE' AND PROD_LINE = 'PRODUCT' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WW11, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'LP' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WW2A, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'ADV WKST' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WW4A, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'SMC' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWS1, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_CATEGORY= 'MOBILE' AND PROD_LINE = 'PRODUCT' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNA, 
    
    CASE WHEN INFO_IND = 'Y' AND PROD_CATEGORY IS NULL OR PROD_CATEGORY != 'DESKTOP' THEN INFO_COUNT ELSE 0 END AS WW12, 
    
    CASE WHEN INB_IND = 'Y' AND WARRANTY_IND = 'Y'  AND PROD_CATEGORY IN ('DESKTOP', 'OPTION') AND PROD_LINE = 'PRODUCT' THEN INB_COUNT ELSE 0 END AS WW13, 
    
    CASE WHEN INB_IND = 'Y' AND WARRANTY_IND = 'N'  AND PROD_CATEGORY IN ('DESKTOP', 'OPTION') AND PROD_LINE = 'PRODUCT' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNC, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'ADV WKST' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNE, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'LP' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNH, 
    
    CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'SMC' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNI, 
    
    CASE WHEN INFO_IND = 'Y' AND PROD_CATEGORY = 'DESKTOP' THEN INFO_COUNT ELSE 0 END AS WW14, 
    
    CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL)  OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'PRODUCT' THEN OUB_COUNT ELSE 0 END AS WW15, 
    
    CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'LP' THEN OUB_COUNT ELSE 0 END AS WW2M, 
    
    CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'ADV WKST' THEN OUB_COUNT ELSE 0 END AS WW4B, 
    
    CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'SMC' THEN OUB_COUNT ELSE 0 END AS WWS2, 
    
    CASE WHEN CRU_IND = 'Y' AND (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y' OR LIABILITY_IND = 'Y')  AND PROD_LINE IN ('PRODUCT', 'ADV WKST') AND UCASE(BRAND) != 'VISUAL MONITOR' THEN 1 ELSE 0 END AS WW16, 

    CASE WHEN CRU_IND = 'Y' AND UCASE(BRAND) = 'VISUAL MONITOR' THEN 1 ELSE 0 END AS WW17, 

    CASE WHEN PROD_LINE = 'PRODUCT' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW31, 
    
    CASE WHEN PROD_LINE = 'ADV WKST' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW4C, 
    
    CASE WHEN PROD_LINE = 'LP' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW2C, 
    
    CASE WHEN PROD_LINE = 'SMC' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WWS4, 
    
    
    CASE WHEN PROD_LINE = 'PRODUCT' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW32, 
    
    
    CASE WHEN PROD_LINE = 'ADV WKST' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW4E, 
    
    CASE WHEN PROD_LINE = 'LP' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW2D, 
    
    CASE WHEN PROD_LINE = 'SMC' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WWS5, 
    
    CASE WHEN PROD_LINE = 'PRODUCT' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW33, 
    
    CASE WHEN PROD_LINE = 'ADV WKST' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW4F, 
    
    CASE WHEN PROD_LINE = 'LP' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW2E, 
    
    CASE WHEN PROD_LINE = 'SMC' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WWS6, 
    
    
    
    CUSTOMER_EXCEPTION_TYPE, INB_COUNT, OUB_COUNT, COMPUTED_RESP_ENTITLEMENT, 
    WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
    COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
    ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
    ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV 
    
    FROM TABLE_DATA_CALC3
    ), 
    
    FINAL_RCS(&quot;MACHINE TYPE&quot;, &quot;RCS SERIAL&quot;, LLI, &quot;PROBLEM NUMBER&quot;, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;TRANSACTION COUNT&quot;, PROVINCE, &quot;SERV PERFORMED DATE&quot;, &quot;NSS CALL NUM&quot;, &quot;CALL RECD DATE&quot;, &quot;DATA SOURCE&quot;, BRAND, &quot;RCS CATEGORY&quot;, COMPANY_NAME, DEBUG_CATEGORY) AS (
    
    SELECT 
    PROD, SERIAL, LLI, ICPM_DOCNUM, CUST_ZIP, 
    '649', 
    CASE WHEN WW11 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001350' ELSE 'C0001275' END ELSE 
      CASE WHEN WW2A &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001593' ELSE 'C0001563' END ELSE
      CASE WHEN WW4A &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001594' ELSE 'C0001564' END ELSE
      CASE WHEN WWS1 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001614' ELSE 'C0001601' END ELSE
      CASE WHEN WWNA &gt; 0 THEN 'C0001642' ELSE
      CASE WHEN WW12 &gt; 0 THEN 'C0001385'ELSE
      CASE WHEN WW13 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001351' ELSE 'C0001276' END ELSE
      CASE WHEN WWNC &gt; 0 THEN 'C0001643' ELSE
      CASE WHEN WWNE &gt; 0 THEN 'C0001644' ELSE
      CASE WHEN WWNH &gt; 0 THEN 'C0001645' ELSE
      CASE WHEN WWNI &gt; 0 THEN 'C0001646' ELSE
      CASE WHEN WW14 &gt; 0 THEN 'C0001386'
      END END END END END END END END END END END END, 
    WW11 + WW2A + WW4A + WWS1 + WWNA + WW12 + WW13 + WWNC + WWNE + WWNH + WWNI + WW14, 
    CUST_ST, CLOSE_DATE, NSS_CALL_NUM, CLOSE_DATE, 
    'AG', 
    BRAND, RCS_CATEGORY, 
    CUST_NAME AS COMPANY_NAME,
    'INBOUND-INFO' AS DEBUG_CATEGORY
    FROM TABLE_DATA_CALC4
    WHERE WW11 + WW2A + WW4A + WWS1 + WWNA + WW12 + WW13 + WWNC + WWNE + WWNH + WWNI + WW14 &gt; 0
    
    UNION ALL
    
    SELECT PROD, SERIAL, LLI, ICPM_DOCNUM, CUST_ZIP, 
    '649', 
    CASE WHEN WW15 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001352' ELSE 'C0001277' END ELSE 
      CASE WHEN WW2M &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001596' ELSE 'C0001566' END ELSE
      CASE WHEN WW4B &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001597' ELSE 'C0001567' END ELSE
      CASE WHEN WWS2 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001615' ELSE 'C0001603' END
      END END END END, 
    WW15 + WW2M + WW4B + WWS2, 
    CUST_ST, 
    CASE WHEN CLOSE_DATE IS NULL THEN OPEN_DATE ELSE CLOSE_DATE END, 
    NSS_CALL_NUM, CLOSE_DATE, 
    'AG', 
    BRAND, RCS_CATEGORY,
    CUST_NAME AS COMPANY_NAME,
    'OUTBOUND' AS DEBUG_CATEGORY
    FROM TABLE_DATA_CALC4
    WHERE WW15 + WW2M + WW4B + WWS2 &gt; 0
    
    UNION ALL
    
    SELECT 
    PROD, SERIAL, LLI, ICPM_DOCNUM, CUST_ZIP, 
    '649', 
    CASE WHEN WW16 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001353' ELSE 'C0001278' END ELSE 
    CASE WHEN WW17 &gt; 0 THEN 'C0001292' END END, 
    WW16 + WW17, 
    CUST_ST, CLOSE_DATE, NSS_CALL_NUM, CLOSE_DATE, 
    'AG', 
    BRAND, RCS_CATEGORY,
    CUST_NAME AS COMPANY_NAME,
    'CRU' AS DEBUG_CATEGORY
    FROM TABLE_DATA_CALC4
    WHERE WW16 + WW17 &gt; 0
    ), 
    
    FINAL_BF(&quot;MACHINE TYPE&quot;, &quot;BF SERIAL&quot;, LLI, &quot;SERVICE DATE&quot;, &quot;PROBLEM NUMBER&quot;, ECA, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;TRANSACTION COUNT&quot;, PROVINCE, &quot;SERV PERFORMED DATE&quot;, &quot;NSS CALL NUM&quot;, &quot;CALL RECD DATE&quot;, &quot;DATA SOURCE&quot;, COMPANY_NAME) AS (
    SELECT 
    PROD, SERIAL, LLI, CLOSE_DATE, ICPM_DOCNUM, 
    '', 
    CUST_ZIP, 
    '649', 
    CASE WHEN WW31 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001354' ELSE 'C0001279' END ELSE 
      CASE WHEN WW4C &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001620' ELSE 'C0001607' END ELSE
      CASE WHEN WW2C &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001585' ELSE 'C0001555' END ELSE
      CASE WHEN WWS4 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001617' ELSE 'C0001604' END ELSE
      CASE WHEN WW32 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001355' ELSE 'C0001280' END ELSE
      CASE WHEN WW4E &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001621' ELSE 'C0001608' END ELSE
      CASE WHEN WW2D &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001586' ELSE 'C0001556' END ELSE
      CASE WHEN WWS5 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001618' ELSE 'C0001605' END ELSE
      CASE WHEN WW33 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001356' ELSE 'C0001281' END ELSE
      CASE WHEN WW4F &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001622' ELSE 'C0001609' END ELSE
      CASE WHEN WW2E &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001587' ELSE 'C0001557' END ELSE
      CASE WHEN WWS6 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001619' ELSE 'C0001606' END
      END END END END END END END END END END END END, 
    
    CASE WHEN VALUE(B.AP_COUNT, 0) &gt; 0 THEN 
      AP_COUNT +  WW31 + WW4C + WW2C + WWS4 + WW32 + WW4E + WW2D + WWS5 + WW33 + WW4F + WW2E + WWS6
      ELSE WW31 + WW4C + WW2C + WWS4 + WW32 + WW4E + WW2D + WWS5 + WW33 + WW4F + WW2E + WWS6 END, 
    CUST_ST, CLOSE_DATE, A.NSS_CALL_NUM, CLOSE_DATE, 
    'BE',
    CUST_NAME AS COMPANY_NAME
    FROM TABLE_DATA_CALC4 A LEFT JOIN CS.SDMCALLSUM04 B ON A.NSS_CALL_NUM = B.NSS_CALL_NUM
    WHERE WW31 + WW4C + WW2C + WWS4 + WW32 + WW4E + WW2D + WWS5 + WW33 + WW4F + WW2E + WWS6 &gt; 0
    ),
    
    FINAL_OOW_DISCOUNT (ICPM_DOCNUM, PROD, SERIAL, EFFECTIVE_WAR_EXP, WARRANTY_IND, TOTAL_COUNT) AS (
    SELECT 
    ICPM_DOCNUM, PROD, SERIAL, EFFECTIVE_WAR_EXP, WARRANTY_IND,
    WWNA + WWNC + WWNE + WWNH + WWNI
    FROM TABLE_DATA_CALC4
    WHERE WWNA + WWNC + WWNE + WWNH + WWNI &gt; 0
    )
    
    SELECT * FROM FINAL_BF

     "/>
  </report>
<!-- Report3:send a single email to administrators found in LSR.properties file -->
  <report includeHeader="Db2Header">
    <fileName text="CA_oow_discount.csv" />
    <dateFormat text="YYYY/MM/DD" />
    <timeFormat text="HH:MM:SS" />
     <SQL text="
        WITH PERIOD(PERIOD_END_DTE, PERIOD_START_DTE) AS (
        SELECT MIN(PERIOD_END_DTE), MIN(PERIOD_START_DTE) FROM CS.LEN_PERIOD_DATES04 
        WHERE LEN_DATA_REC = 'N' 
        ), 
        
        ICPM_TSP (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND) AS (
        SELECT A.DOCNUM, 
        LTRIM(RTRIM(B.CLOSE_CODE)), 
        B.CLOSE_DATE, 
        LTRIM(RTRIM(UPPER(B.CUST_NAME))), 
        B.CUST_ST, B.CUST_ZIP, B.ECCO_ID, B.ENTRY_EMP, 
        CAST(CASE WHEN LTRIM(RTRIM(B.LENOVO_INB)) = '' THEN '0' ELSE B.LENOVO_INB END AS INTEGER) AS LENOVO_INB, 
        CAST(CASE WHEN LTRIM(RTRIM(B.LENOVO_OUT)) = '' THEN '0' ELSE B.LENOVO_OUT END AS INTEGER) AS LENOVO_OUT, 
        B.OPEN_DATE, B.PROD, 
        LTRIM(RTRIM(B.SERIAL)) AS SERIAL,
        B.WORKGROUP, 
        CASE WHEN SUBSTR ( B.PROGENITOR, 1, 3 ) != '000' THEN SUBSTR( B.PROGENITOR, 1, 2 ) || '-' || SUBSTR( B.PROGENITOR, 3, 5 ) END AS NSS_CALL_NUM,
        LTRIM(RTRIM(B.LIAB_IND)) AS LIAB_IND
        FROM CS.ICPM_CUR_DOC04 A JOIN CS.ICPM_TSP04 B ON A.DOCNUM=B.DOCNUM AND A.FILE_SEQUENCE_NO=B.FILE_SEQUENCE_NO
        WHERE (B.CLOSE_DATE &lt;= (SELECT PERIOD_END_DTE FROM PERIOD) AND B.CLOSE_DATE &gt;= (SELECT PERIOD_START_DTE FROM PERIOD) )
        OR ((B.OPEN_DATE &lt;= (SELECT PERIOD_END_DTE FROM PERIOD) AND B.OPEN_DATE &gt;= (SELECT PERIOD_START_DTE FROM PERIOD) ) AND B.CLOSE_CODE='CANDEP' AND B.CUST_NAME='SDE')
        ),
        
        UNIQUE_NSS_CALL_NUM(NSS_CALL_NUM, ICPM_DOCNUM, PROD, SERIAL) AS (
        SELECT DISTINCT NSS_CALL_NUM, ICPM_DOCNUM, PROD, SERIAL FROM ICPM_TSP
        ), 
        
        QSAR_DATA (ICPM_DOCNUM, SERVCODE) AS (
        SELECT A.ICPM_DOCNUM, C.SERVCODE
        FROM UNIQUE_NSS_CALL_NUM A JOIN CS.CPN_LINK04 B ON A.NSS_CALL_NUM = B.NSS_CALL_NUM 
        JOIN CS.INCIDENT_HW04 C ON C.DOCNUM=B.DOCNUM 
        WHERE C.SERVCODE IN ('33', '44') 
        AND C.KINDCALL= '1'
        AND (A.PROD = C.MACH OR A.SERIAL = C.SERIAL)
        ), 
        
        MACHINE_REFERENCE (PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY)AS (
        SELECT 
        CASE WHEN SERIESNAME = 'SMC' THEN 'SMC' ELSE
        CASE UCASE(BRAND)
          WHEN 'DESKTOP' THEN 'PRODUCT'
          WHEN 'FEATURE/OPTION' THEN 'PRODUCT'
          WHEN 'MOBILE' THEN 'PRODUCT'
          WHEN 'NETBOOK' THEN 'PRODUCT'
          WHEN 'SERVER' THEN 'LP'
          WHEN 'VISUAL MONITOR' THEN 'PRODUCT'
          WHEN 'WORKSTATION' THEN 'ADV WKST' END END AS PROD_LINE, 
        MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY
        FROM CS.LEN_MACH04 WHERE IS_VALID = 'Y'
        ), 
        
        SDF_1(SDF, PHASE1, PHASE1_DUR, TOT_MONTHS) AS (
        SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER), TOT_MONTHS FROM 
        CS.PEW_SDF04 WHERE PHASE = '1'
        ), 
        SDF_2(SDF, PHASE2, PHASE2_DUR) AS (
        SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER) FROM 
        CS.PEW_SDF04 WHERE PHASE = '2'
        ), 
        SDF_3(SDF, PHASE3, PHASE3_DUR) AS (
        SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER) FROM 
        CS.PEW_SDF04 WHERE PHASE = '3'
        ), 
        SDF_4(SDF, PHASE4, PHASE4_DUR) AS (
        SELECT SDF, PHASE, CAST(PHASE_DURATION AS INTEGER) FROM 
        CS.PEW_SDF04 WHERE PHASE = '4'
        ), 
        SDF_ALL(SDF, TOT_MONTHS, PHASE1, PHASE1_DUR, PHASE2, PHASE2_DUR, PHASE3, PHASE3_DUR, PHASE4, PHASE4_DUR) AS (
        SELECT A.SDF, A.TOT_MONTHS,  
        PHASE1, CASE WHEN PHASE1_DUR IS NULL THEN 0 ELSE PHASE1_DUR END AS PHASE1_DUR, 
        PHASE2, CASE WHEN PHASE2_DUR IS NULL THEN 0 ELSE PHASE2_DUR END AS PHASE2_DUR, 
        PHASE3, CASE WHEN PHASE3_DUR IS NULL THEN 0 ELSE PHASE3_DUR END AS PHASE3_DUR, 
        PHASE4, CASE WHEN PHASE4_DUR IS NULL THEN 0 ELSE PHASE4_DUR END AS PHASE4_DUR
        FROM SDF_1 A LEFT JOIN SDF_2 B ON A.SDF = B.SDF LEFT JOIN SDF_3 C ON A.SDF = C.SDF LEFT JOIN SDF_4 D ON A.SDF = D.SDF
        ), 
        
        ICPM_PEW_MACH (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF) AS (
        SELECT 
        A.ICPM_DOCNUM, A.CLOSE_CODE, A.CLOSE_DATE, A.CUST_NAME, A.CUST_ST, A.CUST_ZIP, A.ECCO_ID, A.ENTRY_EMP, LENOVO_INB, A.LENOVO_OUT, A.OPEN_DATE, A.PROD, A.SERIAL, A.WORKGROUP, A.NSS_CALL_NUM, A.LIAB_IND,
        B.SERVCODE, 
        C.PROD_LINE, C.MACH, C.BRAND, C.IS_VALID, C.SERIESNAME, C.LIABILITY,
        D.MA_SDF, D.SDF, D.SERV_START_DATE, D.SERV_END_DATE, D.WAR_EXP_DATE, D.SHIP_DATE, 
        CASE WHEN D.SERV_END_DATE IS NOT NULL THEN D.SERV_END_DATE ELSE D.WAR_EXP_DATE END AS EFFECTIVE_WAR_EXP, 
        CASE WHEN D.MA_SDF IS NOT NULL THEN D.MA_SDF ELSE D.SDF END AS EFFECTIVE_SDF
        FROM  ICPM_TSP A LEFT JOIN QSAR_DATA B ON A.ICPM_DOCNUM = B.ICPM_DOCNUM
        LEFT JOIN MACHINE_REFERENCE C ON A.PROD = C.MACH
        LEFT JOIN CS.PEW_INVENTORY04 D ON A.PROD || A.SERIAL = D.MACH_SERIAL
        WHERE C.IS_VALID = 'Y' OR UCASE(A.PROD) = 'INFO'
        ),
        
        ICPM_PEW_MACH_SDF_CALC (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, PHASE_CALC) AS (
        SELECT ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, A.SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, 
        CASE WHEN (EFFECTIVE_SDF IS NOT NULL AND CLOSE_DATE IS NOT NULL) THEN 
          CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE1_DUR MONTHS THEN PHASE1 ELSE 
          CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE2_DUR MONTHS THEN PHASE2 ELSE 
          CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE3_DUR MONTHS THEN PHASE3 ELSE 
          CASE WHEN CLOSE_DATE &lt;= SHIP_DATE + PHASE4_DUR MONTHS THEN PHASE4 ELSE 
          CASE WHEN PHASE4_DUR != 0 THEN PHASE4 ELSE 
          CASE WHEN PHASE3_DUR != 0 THEN PHASE3 ELSE 
          CASE WHEN PHASE2_DUR != 0 THEN PHASE2 ELSE 
          CASE WHEN PHASE1_DUR != 0 OR (PHASE1_DUR = 0 AND TOT_MONTHS = '000') THEN PHASE1 END END END END END END END END END AS  PHASE_CALC
        FROM ICPM_PEW_MACH A LEFT JOIN SDF_ALL B ON A.SDF = B.SDF
        ), 
        
        TABLE_DATA (ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV) AS (
        SELECT ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, A.SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, 
        B.RESP_INDICATOR, B.CVG_DAYS, B.SRV_DELIV
        FROM ICPM_PEW_MACH_SDF_CALC A LEFT JOIN CS.PEW_SDF04 B ON A.EFFECTIVE_SDF = B.SDF AND A.PHASE_CALC = B.PHASE
        ), 
        
        TABLE_DATA_CALC1 (COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT, COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
        ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
        ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV) AS (
        SELECT
        CASE WHEN POSSTR (CUST_NAME, '#') &gt; 1 THEN LTRIM(RTRIM(SUBSTR ( CUST_NAME, 1,  POSSTR (CUST_NAME, '#') -1))) ELSE
          CASE WHEN POSSTR (CUST_NAME, 'RB ') &gt; 0 OR POSSTR (CUST_NAME, 'ROYAL BANK') &gt; 0 OR  POSSTR (CUST_NAME, 'RB-') &gt; 0 OR POSSTR (CUST_NAME, 'RBC ') &gt; 0 OR CUST_NAME = 'RBC' THEN 'RB' ELSE 
          CASE WHEN POSSTR (CUST_NAME, 'BANK OF NOVA SCOTIA') &gt; 0 OR POSSTR (CUST_NAME, 'SCOTIABANK') &gt; 0 OR POSSTR (CUST_NAME, 'BNS') &gt; 0 THEN 'BNS' ELSE
          CASE WHEN POSSTR (CUST_NAME, 'SYMCOR') &gt; 0 THEN 'SYMCOR'  ELSE
          CASE WHEN POSSTR (CUST_NAME, 'TD ') = 1 OR POSSTR (CUST_NAME, 'TD/') = 1 OR CUST_NAME = 'TD' OR POSSTR (CUST_NAME, 'TDCANADA') &gt; 0 OR POSSTR (CUST_NAME, 'TD CANADA') &gt; 0 OR POSSTR (CUST_NAME, 'TDBANK') &gt; 0 THEN 'TD'
          END END END END END AS COMPUTED_CUST_NAME, 
            
        CASE WHEN EFFECTIVE_SDF = 'LNV' THEN 'Y' ELSE 'N' END AS LENOVO_INTERNAL_IND, 
        CASE WHEN CLOSE_CODE != 'OUTBNDCALL' AND LENOVO_INB = 0 THEN 1 ELSE LENOVO_INB END AS COMPUTED_INBOUND_COUNT, 
        CASE WHEN (CLOSE_CODE = 'OUTBNDCALL' AND LENOVO_OUT = 0) OR (CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL AND LENOVO_OUT = 0) THEN 1 ELSE LENOVO_OUT END AS COMPUTED_OUTBOUND_COUNT, 
        CASE WHEN POSSTR (CLOSE_CODE, 'CANDEP') &gt; 0  AND CLOSE_DATE IS NOT NULL THEN 'Y' ELSE 'N' END AS DEP_IND, 
        CASE WHEN POSSTR (CLOSE_CODE, 'CRU') &gt; 0 THEN 'Y' ELSE 'N' END AS CRU_IND, 
        CASE WHEN POSSTR (CLOSE_CODE, 'ONS') &gt; 0 OR POSSTR (CLOSE_CODE, 'VDR') &gt; 0 THEN 'Y' ELSE 'N' END AS ONS_IND, 
        CASE WHEN PROD = 'INFO' THEN 'Y' ELSE 'N' END AS INFO_IND, 
        
        UCASE (CASE UCASE(BRAND)
          WHEN 'DESKTOP' THEN BRAND
          WHEN 'FEATURE/OPTION' THEN 'OPTION'
          WHEN 'MOBILE' THEN BRAND
          WHEN 'NETBOOK' THEN 'MOBILE'
          WHEN 'SERVER' THEN BRAND
          WHEN 'VISUAL MONITOR' THEN 'DESKTOP'
          WHEN 'WORKSTATION' THEN 'DESKTOP' END ) AS PROD_CATEGORY, 
        
        CASE WHEN RESP_INDICATOR = 'H' AND CVG_DAYS = '7' THEN '724' ELSE 
          CASE WHEN RESP_INDICATOR = 'H' AND CVG_DAYS = '5' THEN 'SBD' ELSE 
          CASE WHEN RESP_INDICATOR = 'D'  THEN 'NBD' ELSE 'NA' END END END AS RESP_ENTITLEMENT, 
        
        CASE WHEN SUBSTR(CLOSE_CODE, 1, 3) = 'CRU' OR SUBSTR(CLOSE_CODE, 1, 5) = 'TSONS' THEN SUBSTR(CLOSE_CODE, LENGTH(CLOSE_CODE) -2, 3)  END AS ICPM_RESP_ENTITLEMENT, 
        
        CASE UCASE(SRV_DELIV)
          WHEN 'CCE' THEN 'DEP'
          WHEN 'CCI' THEN 'DEP'
          WHEN 'CCR' THEN 'DEP'
          WHEN 'CPU' THEN ' '
          WHEN 'CRU' THEN 'CRU' 
          WHEN 'DNL' THEN ' '
          WHEN 'DPT' THEN 'DEP'
          WHEN 'EXC' THEN 'DEP'
          WHEN 'EXP' THEN 'DEP'
          WHEN 'EXV' THEN 'DEP'
          WHEN 'EZS' THEN 'DEP'
          WHEN 'ICE' THEN 'DEP'
          WHEN 'ICS' THEN 'DEP'
          WHEN 'IOE' THEN 'ONS'
          WHEN 'IOL' THEN 'ONS'
          WHEN 'IOR' THEN 'ONS'
          WHEN 'NMS' THEN 'DEP'
          WHEN 'NON' THEN 'DEP'
          WHEN 'PAR' THEN 'Parts'
          WHEN 'TBD' THEN ' ' END  AS SRV_DELIV_DECODE, 
        
        CASE WHEN LIABILITY = 'LENOVO' OR (UCASE(SUBSTR(SERIAL, 1, 1)) = 'L' AND LIABILITY = 'SHARED') OR EFFECTIVE_WAR_EXP IS NOT NULL OR LIAB_IND = 'LEN' THEN 'Y' ELSE 'N' END AS LIABILITY_IND,
        
        ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
        FROM TABLE_DATA
        ),
        
        TABLE_DATA_CALC2 (
        WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
        COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
        ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
        ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
        ) AS (
        SELECT 
        
        CASE WHEN OPEN_DATE &lt;= EFFECTIVE_WAR_EXP OR LENOVO_INTERNAL_IND = 'Y' THEN 'Y' ELSE 'N' END AS WARRANTY_IND, 
        CASE WHEN LIABILITY_IND = 'Y' AND ((COMPUTED_CUST_NAME = 'RB' OR ECCO_ID = '0815512') OR  (COMPUTED_CUST_NAME = 'BNS' OR ECCO_ID = '0502761') OR (COMPUTED_CUST_NAME = 'SYMCOR' OR ECCO_ID = '0038819') OR (COMPUTED_CUST_NAME = 'TD' OR ECCO_ID = '0893619')) THEN 'Y' ELSE 'N' END AS CUSTOMER_EXCEPTION, 
        CASE WHEN (CLOSE_CODE != 'NOHWDISP' AND PROD != 'INFO') AND NOT (CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) THEN 'Y' ELSE 'N' END AS INB_IND, 
        CASE WHEN (COMPUTED_OUTBOUND_COUNT &gt; 0 AND CLOSE_CODE NOT IN ('NOHWDISP', 'TPPCALL') AND ENTRY_EMP != 'ECI') OR (COMPUTED_OUTBOUND_COUNT &gt; 0 AND CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL AND CUST_NAME = 'SDE') THEN 'Y' ELSE 'N' END AS OUB_IND, 
        CASE WHEN INFO_IND = 'Y' THEN COMPUTED_INBOUND_COUNT ELSE 0 END AS INFO_COUNT, 
        CASE WHEN (ONS_IND = 'Y' AND SRV_DELIV_DECODE != 'ONS') OR (DEP_IND = 'Y' AND SRV_DELIV_DECODE != 'DEP') THEN 'Y' ELSE 'N' END AS SERV_DELIV_MISMATCH, 
        CASE WHEN INFO_IND = 'Y' THEN PROD END AS RCS_CATEGORY, 
        
        COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
        ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
        ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
        FROM TABLE_DATA_CALC1
        ), 
        
        TABLE_DATA_CALC3(
        CUSTOMER_EXCEPTION_TYPE, INB_COUNT, OUB_COUNT, COMPUTED_RESP_ENTITLEMENT, 
        WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
        COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
        ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
        ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
        ) AS (
        
        SELECT 
        CASE WHEN CUSTOMER_EXCEPTION = 'Y' THEN CASE WHEN ((COMPUTED_CUST_NAME = 'RB' OR ECCO_ID = '0815512') AND (WARRANTY_IND = 'N')) THEN 'RB1' ELSE 
          CASE WHEN ((COMPUTED_CUST_NAME = 'RB' OR ECCO_ID = '0815512') AND (WARRANTY_IND = 'Y')) THEN 'RB2' ELSE 
          CASE WHEN (COMPUTED_CUST_NAME = 'BNS' OR ECCO_ID = '0502761') THEN 'BN1' ELSE 
          CASE WHEN (COMPUTED_CUST_NAME = 'SYMCOR' OR ECCO_ID = '0038819') THEN 'SY1'  ELSE
          CASE WHEN ((COMPUTED_CUST_NAME = 'TD' OR ECCO_ID = '0893619') AND (WARRANTY_IND = 'N')) THEN 'TD1' ELSE 
          CASE WHEN ((COMPUTED_CUST_NAME = 'TD' OR ECCO_ID = '0893619') AND (WARRANTY_IND = 'Y')) THEN 'TD2' 
          END END END END END END END AS CUSTOMER_EXCEPTION_TYPE, 
        
        CASE WHEN INB_IND = 'Y' THEN COMPUTED_INBOUND_COUNT ELSE 0 END AS INB_COUNT, 
        CASE WHEN OUB_IND = 'Y' THEN COMPUTED_OUTBOUND_COUNT ELSE 0 END AS OUB_COUNT, 
        CASE WHEN (CUSTOMER_EXCEPTION ='Y' OR WARRANTY_IND = 'N') AND ICPM_RESP_ENTITLEMENT IS NOT NULL THEN ICPM_RESP_ENTITLEMENT ELSE RESP_ENTITLEMENT END AS COMPUTED_RESP_ENTITLEMENT, 
        
        WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
        COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
        ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
         ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
        FROM TABLE_DATA_CALC2
        ),
        
        TABLE_DATA_CALC4(
        LLI, WW11, WW2A, WW4A, WWS1, WWNA, WW12, WW13, WWNC, WWNE, WWNH, WWNI, WW14, WW15, WW2M, WW4B, WWS2, WW16, WW17, WW31, WW4C, WW2C, WWS4, WW32, WW4E, WW2D, WWS5, WW33, WW4F, WW2E, WWS6, 
        CUSTOMER_EXCEPTION_TYPE, INB_COUNT, OUB_COUNT, COMPUTED_RESP_ENTITLEMENT, 
        WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
        COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
        ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
         ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV
        ) AS (
        
        SELECT 
        
        CASE WHEN CUSTOMER_EXCEPTION = 'Y' AND (WARRANTY_IND = 'N' OR SERV_DELIV_MISMATCH = 'Y' OR SERVCODE IS NOT NULL) THEN CUSTOMER_EXCEPTION_TYPE ELSE 'L00' END AS LLI, 
        
        CASE WHEN INB_IND = 'Y' AND PROD_CATEGORY = 'MOBILE' AND PROD_LINE = 'PRODUCT' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WW11, 
        
        CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'LP' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WW2A, 
        
        CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'ADV WKST' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WW4A, 
        
        CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'SMC' AND WARRANTY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWS1, 
        
        CASE WHEN INB_IND = 'Y' AND PROD_CATEGORY= 'MOBILE' AND PROD_LINE = 'PRODUCT' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNA, 
        
        CASE WHEN INFO_IND = 'Y' AND PROD_CATEGORY IS NULL OR PROD_CATEGORY != 'DESKTOP' THEN INFO_COUNT ELSE 0 END AS WW12, 
        
        CASE WHEN INB_IND = 'Y' AND WARRANTY_IND = 'Y'  AND PROD_CATEGORY IN ('DESKTOP', 'OPTION') AND PROD_LINE = 'PRODUCT' THEN INB_COUNT ELSE 0 END AS WW13, 
        
        CASE WHEN INB_IND = 'Y' AND WARRANTY_IND = 'N'  AND PROD_CATEGORY IN ('DESKTOP', 'OPTION') AND PROD_LINE = 'PRODUCT' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNC, 
        
        CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'ADV WKST' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNE, 
        
        CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'LP' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNH, 
        
        CASE WHEN INB_IND = 'Y' AND PROD_LINE = 'SMC' AND WARRANTY_IND = 'N' AND LIABILITY_IND = 'Y' THEN INB_COUNT ELSE 0 END AS WWNI, 
        
        CASE WHEN INFO_IND = 'Y' AND PROD_CATEGORY = 'DESKTOP' THEN INFO_COUNT ELSE 0 END AS WW14, 
        
        CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL)  OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'PRODUCT' THEN OUB_COUNT ELSE 0 END AS WW15, 
        
        CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'LP' THEN OUB_COUNT ELSE 0 END AS WW2M, 
        
        CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'ADV WKST' THEN OUB_COUNT ELSE 0 END AS WW4B, 
        
        CASE WHEN OUB_IND = 'Y' AND ( (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y') OR ( CLOSE_CODE = 'CANDEP' AND CLOSE_DATE IS NULL) OR (LIABILITY_IND = 'Y') ) AND PROD_LINE = 'SMC' THEN OUB_COUNT ELSE 0 END AS WWS2, 
        
        CASE WHEN CRU_IND = 'Y' AND (WARRANTY_IND = 'Y'  OR CUSTOMER_EXCEPTION = 'Y' OR LIABILITY_IND = 'Y')  AND PROD_LINE IN ('PRODUCT', 'ADV WKST') AND UCASE(BRAND) != 'VISUAL MONITOR' THEN 1 ELSE 0 END AS WW16, 
    
        CASE WHEN CRU_IND = 'Y' AND UCASE(BRAND) = 'VISUAL MONITOR' THEN 1 ELSE 0 END AS WW17, 
    
        CASE WHEN PROD_LINE = 'PRODUCT' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW31, 
        
        CASE WHEN PROD_LINE = 'ADV WKST' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW4C, 
        
        CASE WHEN PROD_LINE = 'LP' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW2C, 
        
        CASE WHEN PROD_LINE = 'SMC' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = 'NBD' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WWS4, 
        
        
        CASE WHEN PROD_LINE = 'PRODUCT' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW32, 
        
        
        CASE WHEN PROD_LINE = 'ADV WKST' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW4E, 
        
        CASE WHEN PROD_LINE = 'LP' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW2D, 
        
        CASE WHEN PROD_LINE = 'SMC' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT IN ('SBD', '954') AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WWS5, 
        
        CASE WHEN PROD_LINE = 'PRODUCT' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW33, 
        
        CASE WHEN PROD_LINE = 'ADV WKST' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW4F, 
        
        CASE WHEN PROD_LINE = 'LP' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WW2E, 
        
        CASE WHEN PROD_LINE = 'SMC' AND ONS_IND = 'Y' AND COMPUTED_RESP_ENTITLEMENT = '724' AND (((WARRANTY_IND = 'Y' OR LIABILITY_IND = 'Y') AND SERVCODE IS NULL) OR CUSTOMER_EXCEPTION = 'Y') THEN 1 ELSE 0 END AS WWS6, 
        
        
        
        CUSTOMER_EXCEPTION_TYPE, INB_COUNT, OUB_COUNT, COMPUTED_RESP_ENTITLEMENT, 
        WARRANTY_IND, CUSTOMER_EXCEPTION, INB_IND, OUB_IND, INFO_COUNT, SERV_DELIV_MISMATCH, RCS_CATEGORY, 
        COMPUTED_CUST_NAME, LENOVO_INTERNAL_IND, COMPUTED_INBOUND_COUNT,  COMPUTED_OUTBOUND_COUNT, DEP_IND, CRU_IND, 
        ONS_IND, INFO_IND, PROD_CATEGORY, RESP_ENTITLEMENT, ICPM_RESP_ENTITLEMENT, SRV_DELIV_DECODE, LIABILITY_IND, 
        ICPM_DOCNUM, CLOSE_CODE, CLOSE_DATE, CUST_NAME, CUST_ST, CUST_ZIP, ECCO_ID, ENTRY_EMP, LENOVO_INB, LENOVO_OUT, OPEN_DATE, PROD, SERIAL, WORKGROUP, NSS_CALL_NUM, LIAB_IND, SERVCODE, PROD_LINE, MACH, BRAND, IS_VALID, SERIESNAME, LIABILITY, MA_SDF, SDF, SERV_START_DATE, SERV_END_DATE, WAR_EXP_DATE, SHIP_DATE, EFFECTIVE_WAR_EXP, EFFECTIVE_SDF, RESP_INDICATOR, CVG_DAYS, SRV_DELIV 
        
        FROM TABLE_DATA_CALC3
        ), 
        
        FINAL_RCS(&quot;MACHINE TYPE&quot;, &quot;RCS SERIAL&quot;, LLI, &quot;PROBLEM NUMBER&quot;, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;TRANSACTION COUNT&quot;, PROVINCE, &quot;SERV PERFORMED DATE&quot;, &quot;NSS CALL NUM&quot;, &quot;CALL RECD DATE&quot;, &quot;DATA SOURCE&quot;, BRAND, &quot;RCS CATEGORY&quot;, COMPANY_NAME, DEBUG_CATEGORY) AS (
        
        SELECT 
        PROD, SERIAL, LLI, ICPM_DOCNUM, CUST_ZIP, 
        '649', 
        CASE WHEN WW11 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001350' ELSE 'C0001275' END ELSE 
          CASE WHEN WW2A &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001593' ELSE 'C0001563' END ELSE
          CASE WHEN WW4A &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001594' ELSE 'C0001564' END ELSE
          CASE WHEN WWS1 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001614' ELSE 'C0001601' END ELSE
          CASE WHEN WWNA &gt; 0 THEN 'C0001642' ELSE
          CASE WHEN WW12 &gt; 0 THEN 'C0001385'ELSE
          CASE WHEN WW13 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001351' ELSE 'C0001276' END ELSE
          CASE WHEN WWNC &gt; 0 THEN 'C0001643' ELSE
          CASE WHEN WWNE &gt; 0 THEN 'C0001644' ELSE
          CASE WHEN WWNH &gt; 0 THEN 'C0001645' ELSE
          CASE WHEN WWNI &gt; 0 THEN 'C0001646' ELSE
          CASE WHEN WW14 &gt; 0 THEN 'C0001386'
          END END END END END END END END END END END END, 
        WW11 + WW2A + WW4A + WWS1 + WWNA + WW12 + WW13 + WWNC + WWNE + WWNH + WWNI + WW14, 
        CUST_ST, CLOSE_DATE, NSS_CALL_NUM, CLOSE_DATE, 
        'AG', 
        BRAND, RCS_CATEGORY, 
        CUST_NAME AS COMPANY_NAME,
        'INBOUND-INFO' AS DEBUG_CATEGORY
        FROM TABLE_DATA_CALC4
        WHERE WW11 + WW2A + WW4A + WWS1 + WWNA + WW12 + WW13 + WWNC + WWNE + WWNH + WWNI + WW14 &gt; 0
        
        UNION ALL
        
        SELECT PROD, SERIAL, LLI, ICPM_DOCNUM, CUST_ZIP, 
        '649', 
        CASE WHEN WW15 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001352' ELSE 'C0001277' END ELSE 
          CASE WHEN WW2M &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001596' ELSE 'C0001566' END ELSE
          CASE WHEN WW4B &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001597' ELSE 'C0001567' END ELSE
          CASE WHEN WWS2 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001615' ELSE 'C0001603' END
          END END END END, 
        WW15 + WW2M + WW4B + WWS2, 
        CUST_ST, 
        CASE WHEN CLOSE_DATE IS NULL THEN OPEN_DATE ELSE CLOSE_DATE END, 
        NSS_CALL_NUM, CLOSE_DATE, 
        'AG', 
        BRAND, RCS_CATEGORY,
        CUST_NAME AS COMPANY_NAME,
        'OUTBOUND' AS DEBUG_CATEGORY
        FROM TABLE_DATA_CALC4
        WHERE WW15 + WW2M + WW4B + WWS2 &gt; 0
        
        UNION ALL
        
        SELECT 
        PROD, SERIAL, LLI, ICPM_DOCNUM, CUST_ZIP, 
        '649', 
        CASE WHEN WW16 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001353' ELSE 'C0001278' END ELSE 
        CASE WHEN WW17 &gt; 0 THEN 'C0001292' END END, 
        WW16 + WW17, 
        CUST_ST, CLOSE_DATE, NSS_CALL_NUM, CLOSE_DATE, 
        'AG', 
        BRAND, RCS_CATEGORY,
        CUST_NAME AS COMPANY_NAME,
        'CRU' AS DEBUG_CATEGORY
        FROM TABLE_DATA_CALC4
        WHERE WW16 + WW17 &gt; 0
        ), 
        
        FINAL_BF(&quot;MACHINE TYPE&quot;, &quot;BF SERIAL&quot;, LLI, &quot;SERVICE DATE&quot;, &quot;PROBLEM NUMBER&quot;, ECA, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;TRANSACTION COUNT&quot;, PROVINCE, &quot;SERV PERFORMED DATE&quot;, &quot;NSS CALL NUM&quot;, &quot;CALL RECD DATE&quot;, &quot;DATA SOURCE&quot;, COMPANY_NAME) AS (
        SELECT 
        PROD, SERIAL, LLI, CLOSE_DATE, ICPM_DOCNUM, 
        '', 
        CUST_ZIP, 
        '649', 
        CASE WHEN WW31 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001354' ELSE 'C0001279' END ELSE 
          CASE WHEN WW4C &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001620' ELSE 'C0001607' END ELSE
          CASE WHEN WW2C &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001585' ELSE 'C0001555' END ELSE
          CASE WHEN WWS4 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001617' ELSE 'C0001604' END ELSE
          CASE WHEN WW32 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001355' ELSE 'C0001280' END ELSE
          CASE WHEN WW4E &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001621' ELSE 'C0001608' END ELSE
          CASE WHEN WW2D &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001586' ELSE 'C0001556' END ELSE
          CASE WHEN WWS5 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001618' ELSE 'C0001605' END ELSE
          CASE WHEN WW33 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001356' ELSE 'C0001281' END ELSE
          CASE WHEN WW4F &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001622' ELSE 'C0001609' END ELSE
          CASE WHEN WW2E &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001587' ELSE 'C0001557' END ELSE
          CASE WHEN WWS6 &gt; 0 THEN CASE WHEN  LENOVO_INTERNAL_IND = 'Y' THEN 'C0001619' ELSE 'C0001606' END
          END END END END END END END END END END END END, 
        
        CASE WHEN VALUE(B.AP_COUNT, 0) &gt; 0 THEN 
          AP_COUNT +  WW31 + WW4C + WW2C + WWS4 + WW32 + WW4E + WW2D + WWS5 + WW33 + WW4F + WW2E + WWS6
          ELSE WW31 + WW4C + WW2C + WWS4 + WW32 + WW4E + WW2D + WWS5 + WW33 + WW4F + WW2E + WWS6 END, 
        CUST_ST, CLOSE_DATE, A.NSS_CALL_NUM, CLOSE_DATE, 
        'BE',
        CUST_NAME AS COMPANY_NAME
        FROM TABLE_DATA_CALC4 A LEFT JOIN CS.SDMCALLSUM04 B ON A.NSS_CALL_NUM = B.NSS_CALL_NUM
        WHERE WW31 + WW4C + WW2C + WWS4 + WW32 + WW4E + WW2D + WWS5 + WW33 + WW4F + WW2E + WWS6 &gt; 0
        ),
        
        FINAL_OOW_DISCOUNT (ICPM_DOCNUM, PROD, SERIAL, EFFECTIVE_WAR_EXP, WARRANTY_IND, TOTAL_COUNT) AS (
        SELECT 
        ICPM_DOCNUM, PROD, SERIAL, EFFECTIVE_WAR_EXP, WARRANTY_IND,
        WWNA + WWNC + WWNE + WWNH + WWNI
        FROM TABLE_DATA_CALC4
        WHERE WWNA + WWNC + WWNE + WWNH + WWNI &gt; 0
    )
    
    SELECT * FROM FINAL_OOW_DISCOUNT

     "/>
  </report>


<!-- Report4: send a single email to administrators found in LSR.properties file -->
  <report includeHeader="Db2Header">
    <fileName text="depot_data_anomalies.csv" />
    <dateFormat text="YYYY/MM/DD" />
    <timeFormat text="HH:MM:SS" />
    <SQL text="
	WITH PERIOD(PERIOD_END_DTE, PERIOD_START_DTE) AS (
	SELECT MIN(PERIOD_END_DTE), MIN(PERIOD_START_DTE) FROM CS.LEN_PERIOD_DATES04 
	WHERE LEN_DATA_REC = 'N' 
	), 

	SUB1(NSS_CALL_NUM, CALL_STOP_DATE) AS (
	SELECT NSS_CALL_NUM, CALL_STOP_DATE FROM CS.SDMCALLSUM04 
	WHERE (CALL_STOP_DATE &lt;= (SELECT PERIOD_END_DTE FROM PERIOD) AND CALL_STOP_DATE &gt;= (SELECT PERIOD_START_DTE FROM PERIOD) )
	AND CALL_CLOSE_CDE IN ('CA', 'CX') AND SERVBRMAC = '0V20'
	),

	SUB2(NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3) AS (
	SELECT NSS_CALL_NUM,
	CASE WHEN NSS_ACTIVITY_CDE = 'CA' THEN 1 ELSE 0 END AS CA,
	CASE WHEN NSS_ACTIVITY_CDE = 'CX' THEN 1 ELSE 0 END AS CX,
	CASE WHEN NSS_ACTIVITY_CDE = 'OS' THEN 1 ELSE 0 END AS OS,
	CASE WHEN NSS_ACTIVITY_CDE = 'X5' THEN 1 ELSE 0 END AS X5,
	CASE WHEN NSS_ACTIVITY_CDE = 'LW' THEN 1 ELSE 0 END AS LW,
	CASE WHEN NSS_ACTIVITY_CDE = 'IN' THEN 1 ELSE 0 END AS IN,
	CASE WHEN NSS_ACTIVITY_CDE = 'X4' THEN 1 ELSE 0 END AS X4,
	CASE WHEN NSS_ACTIVITY_CDE = 'X3' THEN 1 ELSE 0 END AS X3
	FROM CS.SDM_ACTVTY_CLOSE04 WHERE 
	NSS_CALL_NUM IN (SELECT NSS_CALL_NUM FROM SUB1)
	),

	SUB3 (NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3) AS (
	SELECT NSS_CALL_NUM, SUM(CA) AS CA, SUM(CX) AS CX, SUM(OS) AS OS, SUM(X5) AS X5, SUM(LW) AS LW, SUM(IN) AS IN, SUM(X4) AS X4, SUM(X3) AS X3 
	FROM SUB2 GROUP BY NSS_CALL_NUM
	),

	SUB4 (NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, REM_NO_RET, REM_OOW_CUST_BILL, LEN_EXCEPTION, TIER, WW_81, WW_DD) AS (
	SELECT NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3,
	CASE WHEN CA &gt;=1 AND OS = 0 THEN 1 ELSE 0 END AS REM_NO_RET,
	CASE WHEN CA &gt;=1 AND OS &gt;=1 AND X5 &gt;= 1 THEN 1 ELSE 0 END AS REM_OOW_CUST_BILL,
	CASE WHEN CX &gt;=1 AND OS &gt;=1 AND LW &gt;=1 THEN 1 ELSE 0 END AS LEN_EXCEPTION,
	CASE WHEN CX &gt;=1 AND OS &gt;=1 AND IN &gt;=1 AND X4 &gt;= 1 THEN 1 ELSE 0 END AS TIER,
	CASE WHEN CX &gt;=1 AND OS &gt;=1 THEN 1 ELSE 0 END AS WW_81,
	CASE WHEN CA &gt;=1 AND OS &gt;=1 AND X5 = 0 AND CX = 0 THEN 1 ELSE 0 END AS WW_DD
	FROM SUB3
	),

	SUB5 (NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, REM_NO_RET, REM_OOW_CUST_BILL, LEN_EXCEPTION, TIER, WW_81, WW_DD, FINAL) AS (
	SELECT NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, REM_NO_RET, REM_OOW_CUST_BILL, LEN_EXCEPTION, TIER, WW_81, WW_DD,
	CASE WHEN TIER &gt; 0 THEN 'TIER'
	ELSE CASE WHEN LEN_EXCEPTION &gt; 0 THEN 'EXCEPTION'
	ELSE CASE WHEN WW_81 &gt; 0 THEN '81'
	ELSE CASE WHEN WW_DD &gt; 0 THEN 'DD'
	ELSE CASE WHEN REM_NO_RET &gt; 0 THEN 'REMOVE NO RETURN' 
	ELSE CASE WHEN REM_OOW_CUST_BILL &gt; 0 THEN 'REM OOW CUST BILLABLE'
	ELSE 'UNKNOWN'
	END END END END END END AS FINAL
	FROM SUB4
	),

	SUB5B (NSS_CALL_NUM) AS (
	SELECT REPLACE(NSS_CALL_NUM,'-','') 
	FROM SUB5 WHERE REM_NO_RET = 0 AND REM_OOW_CUST_BILL = 0
	),

	SUB6 (NSS_CALL_NUM, SDW_COMPONENT) AS (
	SELECT NSS_CALL_NUM, 
	CASE UCASE(REPLACE(REPLACE(ACTIVITY_COMMENTS,'-',''), ' ', ''))
	  WHEN 'TIER1' THEN 'C0001300'
	  WHEN 'TIER2' THEN 'C0001301'
	  WHEN 'TIER3' THEN 'C0001302'
	  WHEN 'TIER4' THEN 'C0001303'
	  WHEN 'TIER5' THEN 'C0001304'
	END CASE
	FROM CS.SDM_ACTVTY_CLOSE04  
	WHERE NSS_CALL_NUM IN (SELECT NSS_CALL_NUM FROM SUB5 WHERE FINAL = 'TIER')
	AND NSS_ACTIVITY_CDE = 'X4'
	),

	SUB7(NSS_CALL_NUM, SDW_COMPONENT) AS (
	SELECT NSS_CALL_NUM, SDW_COMPONENT
	FROM SUB6
	WHERE SDW_COMPONENT IS NOT NULL
	GROUP BY NSS_CALL_NUM, SDW_COMPONENT
	),

	SUB8 (DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME) AS (
	SELECT A.DOCNUM AS DOCNUM, PROD, SERIAL, LTRIM(RTRIM(CLOSE_CODE))  AS CLOSE_CODE, CUST_ST, CUST_ZIP,CUST_NAME
	FROM CS.ICPM_CUR_DOC04 A JOIN CS.ICPM_TSP04 B ON A.DOCNUM=B.DOCNUM AND A.FILE_SEQUENCE_NO=B.FILE_SEQUENCE_NO
	JOIN SUB5B C ON A.DOCNUM = C.NSS_CALL_NUM
	),

	SUB9 (DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME, SDW_COMPONENT, CALL_STOP_DATE) AS (
	SELECT DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME,
	CASE WHEN B.SDW_COMPONENT IS NOT NULL THEN B.SDW_COMPONENT 
	ELSE CASE WHEN C.FINAL = '81' THEN 'C0001290'
	ELSE CASE WHEN C.FINAL = 'DD' THEN 'C0001613'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP1CALL') THEN 'C0001300'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP2CALL') THEN 'C0001301'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP3CALL') THEN 'C0001302'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP4CALL') THEN 'C0001303'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP5CALL') THEN 'C0001304'
	ELSE CASE WHEN (C.FINAL = 'EXCEPTION' AND (CLOSE_CODE = 'CANDEP' OR CLOSE_CODE = 'PULL')) THEN 'C0001290'
	ELSE CASE WHEN C.FINAL = 'TIER' THEN 'ERROR:  TIER LEVEL UNKNOWN'
	ELSE 'ERROR: UNKNOWN CHARGE'
	END END END END END END END END END END AS SDW_COMPONENT,
	CALL_STOP_DATE
	FROM SUB8 A LEFT JOIN SUB7 B ON A.DOCNUM = REPLACE(B.NSS_CALL_NUM,'-','')
	LEFT JOIN SUB5 C ON A.DOCNUM = REPLACE(C.NSS_CALL_NUM,'-','')
	LEFT JOIN SUB1 D ON A.DOCNUM = REPLACE(D.NSS_CALL_NUM,'-','')
	),

	SUB10 (DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME, SDW_COMPONENT, CALL_STOP_DATE) AS (
	SELECT DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME, SDW_COMPONENT, CALL_STOP_DATE
	FROM 
	SUB9 
	WHERE DOCNUM IN (SELECT DOCNUM FROM SUB9 WHERE SDW_COMPONENT IN ('C0001300', 'C0001301', 'C0001302', 'C0001303', 'C0001304')) 

	UNION ALL

	SELECT DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME, SDW_COMPONENT, CALL_STOP_DATE
	FROM 
	SUB9 
	WHERE DOCNUM NOT IN (SELECT DOCNUM FROM SUB9 WHERE SDW_COMPONENT IN ('C0001300', 'C0001301', 'C0001302', 'C0001303', 'C0001304')) 
	),


	SUB11 (DOCNUM, TOTAL) AS (
	SELECT DOCNUM, SUM(1) AS TOTAL
	FROM 
	SUB10
	GROUP BY DOCNUM
	),

	SUB12 (DOCNUM) AS (
	SELECT DOCNUM
	FROM SUB11
	WHERE TOTAL &gt; 1
	),

	FINAL_DEPOT(&quot;MACHINE TYPE&quot;, &quot;DR SERIAL&quot;, &quot;LLI&quot;, &quot;PROBLEM NUMBER&quot;, &quot;ECA&quot;, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;WW CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;US GROUP&quot;, &quot;BILLING DESCR&quot;, &quot;TRANSACTION COUNT&quot;, &quot;PROVINCE&quot;, &quot;SERV PERFORMED DATE&quot;, &quot;DATA SOURCE&quot;, &quot;BILLING RATE&quot;, COMPANY_NAME) AS (
	SELECT DISTINCT PROD, SERIAL,
	'L00' AS LLI,
	DOCNUM, 
	'' AS ECA,
	CUST_ZIP,
	'649',
	'',
	SDW_COMPONENT,
	'',
	'',
	1,
	CUST_ST,
	CALL_STOP_DATE,
	'DC',
	0,
        CUST_NAME AS COMPANY_NAME
	FROM 
	SUB10
	WHERE DOCNUM NOT IN  (SELECT DOCNUM FROM SUB12)
	AND SDW_COMPONENT NOT LIKE 'ERROR:%'
	),

	ANOMALIES(ANOMALY, &quot;MACHINE TYPE&quot;, &quot;DR SERIAL&quot;, &quot;LLI&quot;, &quot;PROBLEM NUMBER&quot;, &quot;ECA&quot;, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;WW CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;US GROUP&quot;, &quot;BILLING DESCR&quot;, &quot;TRANSACTION COUNT&quot;, &quot;PROVINCE&quot;, &quot;SERV PERFORMED DATE&quot;, &quot;DATA SOURCE&quot;, &quot;BILLING RATE&quot;, COMPANY_NAME, NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, FINAL) AS (
	SELECT 
	'MORE THAN 1 TIER CHARGE FOR CALL',
	PROD, SERIAL,
	'L00' AS LLI,
	DOCNUM, 
	'' AS ECA,
	CUST_ZIP,
	'649',
	'',
	SDW_COMPONENT,
	'',
	'',
	1,
	CUST_ST,
	CALL_STOP_DATE,
	'DC',
	0,
	CUST_NAME AS COMPANY_NAME,
	NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, FINAL
	FROM 
	SUB10 A LEFT JOIN SUB5 B ON A.DOCNUM = REPLACE(B.NSS_CALL_NUM,'-','')
	WHERE DOCNUM IN  (SELECT DOCNUM FROM SUB12)

	UNION ALL

	SELECT 
	'NSS CALL NOT FOUND IN SCM',
	'' AS PROD, 
	'' AS SERIAL,
	'L00' AS LLI,
	'' AS DOCNUM, 
	'' AS ECA,
	'' AS CUST_ZIP,
	'649',
	'',
	'' AS SDW_COMPONENT,
	'',
	'',
	1,
	'' AS CUST_ST,
	CAST(NULL AS DATE) AS CALL_STOP_DATE,
	'DC',
	0,
	'' AS COMPANY_NAME,
	NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, FINAL
	FROM SUB5 WHERE REM_NO_RET = 0 AND REM_OOW_CUST_BILL = 0
	AND REPLACE(NSS_CALL_NUM,'-','') NOT IN (SELECT DOCNUM FROM SUB8)

        UNION  ALL
	
        SELECT 
	SDW_COMPONENT,
	PROD, SERIAL,
	'L00' AS LLI,
	DOCNUM, 
	'' AS ECA,
	CUST_ZIP,
	'649',
	'',
	'' AS SDW_COMPONENT,
	'',
	'',
	1,
	CUST_ST,
	CALL_STOP_DATE,
	'DC',
	0,
	CUST_NAME AS COMPANY_NAME,
	NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, FINAL
	FROM 
	SUB10 A LEFT JOIN SUB5 B ON A.DOCNUM = REPLACE(B.NSS_CALL_NUM,'-','')
	WHERE SDW_COMPONENT LIKE 'ERROR:%'	
	)

	SELECT * FROM ANOMALIES
    
    "/>
  </report>
  
  
    <report includeHeader="Db2Header">
      <fileName text="nss_load_depot.csv" />
      <dateFormat text="YYYY/MM/DD" />
      <timeFormat text="HH:MM:SS" />
      <SQL text="
	WITH PERIOD(PERIOD_END_DTE, PERIOD_START_DTE) AS (
	SELECT MIN(PERIOD_END_DTE), MIN(PERIOD_START_DTE) FROM CS.LEN_PERIOD_DATES04 
	WHERE LEN_DATA_REC = 'N' 
	), 

	SUB1(NSS_CALL_NUM, CALL_STOP_DATE) AS (
	SELECT NSS_CALL_NUM, CALL_STOP_DATE FROM CS.SDMCALLSUM04 
	WHERE (CALL_STOP_DATE &lt;= (SELECT PERIOD_END_DTE FROM PERIOD) AND CALL_STOP_DATE &gt;= (SELECT PERIOD_START_DTE FROM PERIOD) )
	AND CALL_CLOSE_CDE IN ('CA', 'CX') AND SERVBRMAC = '0V20'
	),

	SUB2(NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3) AS (
	SELECT NSS_CALL_NUM,
	CASE WHEN NSS_ACTIVITY_CDE = 'CA' THEN 1 ELSE 0 END AS CA,
	CASE WHEN NSS_ACTIVITY_CDE = 'CX' THEN 1 ELSE 0 END AS CX,
	CASE WHEN NSS_ACTIVITY_CDE = 'OS' THEN 1 ELSE 0 END AS OS,
	CASE WHEN NSS_ACTIVITY_CDE = 'X5' THEN 1 ELSE 0 END AS X5,
	CASE WHEN NSS_ACTIVITY_CDE = 'LW' THEN 1 ELSE 0 END AS LW,
	CASE WHEN NSS_ACTIVITY_CDE = 'IN' THEN 1 ELSE 0 END AS IN,
	CASE WHEN NSS_ACTIVITY_CDE = 'X4' THEN 1 ELSE 0 END AS X4,
	CASE WHEN NSS_ACTIVITY_CDE = 'X3' THEN 1 ELSE 0 END AS X3
	FROM CS.SDM_ACTVTY_CLOSE04 WHERE 
	NSS_CALL_NUM IN (SELECT NSS_CALL_NUM FROM SUB1)
	),

	SUB3 (NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3) AS (
	SELECT NSS_CALL_NUM, SUM(CA) AS CA, SUM(CX) AS CX, SUM(OS) AS OS, SUM(X5) AS X5, SUM(LW) AS LW, SUM(IN) AS IN, SUM(X4) AS X4, SUM(X3) AS X3 
	FROM SUB2 GROUP BY NSS_CALL_NUM
	),

	SUB4 (NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, REM_NO_RET, REM_OOW_CUST_BILL, LEN_EXCEPTION, TIER, WW_81, WW_DD) AS (
	SELECT NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3,
	CASE WHEN CA &gt;=1 AND OS = 0 THEN 1 ELSE 0 END AS REM_NO_RET,
	CASE WHEN CA &gt;=1 AND OS &gt;=1 AND X5 &gt;= 1 THEN 1 ELSE 0 END AS REM_OOW_CUST_BILL,
	CASE WHEN CX &gt;=1 AND OS &gt;=1 AND LW &gt;=1 THEN 1 ELSE 0 END AS LEN_EXCEPTION,
	CASE WHEN CX &gt;=1 AND OS &gt;=1 AND IN &gt;=1 AND X4 &gt;= 1 THEN 1 ELSE 0 END AS TIER,
	CASE WHEN CX &gt;=1 AND OS &gt;=1 THEN 1 ELSE 0 END AS WW_81,
	CASE WHEN CA &gt;=1 AND OS &gt;=1 AND X5 = 0 AND CX = 0 THEN 1 ELSE 0 END AS WW_DD
	FROM SUB3
	),

	SUB5 (NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, REM_NO_RET, REM_OOW_CUST_BILL, LEN_EXCEPTION, TIER, WW_81, WW_DD, FINAL) AS (
	SELECT NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, REM_NO_RET, REM_OOW_CUST_BILL, LEN_EXCEPTION, TIER, WW_81, WW_DD,
	CASE WHEN TIER &gt; 0 THEN 'TIER'
	ELSE CASE WHEN LEN_EXCEPTION &gt; 0 THEN 'EXCEPTION'
	ELSE CASE WHEN WW_81 &gt; 0 THEN '81'
	ELSE CASE WHEN WW_DD &gt; 0 THEN 'DD'
	ELSE CASE WHEN REM_NO_RET &gt; 0 THEN 'REMOVE NO RETURN' 
	ELSE CASE WHEN REM_OOW_CUST_BILL &gt; 0 THEN 'REM OOW CUST BILLABLE'
	ELSE 'UNKNOWN'
	END END END END END END AS FINAL
	FROM SUB4
	),

	SUB5B (NSS_CALL_NUM) AS (
	SELECT REPLACE(NSS_CALL_NUM,'-','') 
	FROM SUB5 WHERE REM_NO_RET = 0 AND REM_OOW_CUST_BILL = 0
	),

	SUB6 (NSS_CALL_NUM, SDW_COMPONENT) AS (
	SELECT NSS_CALL_NUM, 
	CASE UCASE(REPLACE(REPLACE(ACTIVITY_COMMENTS,'-',''), ' ', ''))
	  WHEN 'TIER1' THEN 'C0001300'
	  WHEN 'TIER2' THEN 'C0001301'
	  WHEN 'TIER3' THEN 'C0001302'
	  WHEN 'TIER4' THEN 'C0001303'
	  WHEN 'TIER5' THEN 'C0001304'
	END CASE
	FROM CS.SDM_ACTVTY_CLOSE04  
	WHERE NSS_CALL_NUM IN (SELECT NSS_CALL_NUM FROM SUB5 WHERE FINAL = 'TIER')
	AND NSS_ACTIVITY_CDE = 'X4'
	),

	SUB7(NSS_CALL_NUM, SDW_COMPONENT) AS (
	SELECT NSS_CALL_NUM, SDW_COMPONENT
	FROM SUB6
	WHERE SDW_COMPONENT IS NOT NULL
	GROUP BY NSS_CALL_NUM, SDW_COMPONENT
	),

	SUB8 (DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME) AS (
	SELECT A.DOCNUM AS DOCNUM, PROD, SERIAL, LTRIM(RTRIM(CLOSE_CODE))  AS CLOSE_CODE, CUST_ST, CUST_ZIP,CUST_NAME
	FROM CS.ICPM_CUR_DOC04 A JOIN CS.ICPM_TSP04 B ON A.DOCNUM=B.DOCNUM AND A.FILE_SEQUENCE_NO=B.FILE_SEQUENCE_NO
	JOIN SUB5B C ON A.DOCNUM = C.NSS_CALL_NUM
	),

	SUB9 (DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME, SDW_COMPONENT, CALL_STOP_DATE) AS (
	SELECT DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME,
	CASE WHEN B.SDW_COMPONENT IS NOT NULL THEN B.SDW_COMPONENT 
	ELSE CASE WHEN C.FINAL = '81' THEN 'C0001290'
	ELSE CASE WHEN C.FINAL = 'DD' THEN 'C0001613'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP1CALL') THEN 'C0001300'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP2CALL') THEN 'C0001301'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP3CALL') THEN 'C0001302'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP4CALL') THEN 'C0001303'
	ELSE CASE WHEN ((C.FINAL = 'TIER' OR C.FINAL = 'EXCEPTION') AND CLOSE_CODE = 'TP5CALL') THEN 'C0001304'
	ELSE CASE WHEN (C.FINAL = 'EXCEPTION' AND (CLOSE_CODE = 'CANDEP' OR CLOSE_CODE = 'PULL')) THEN 'C0001290'
	ELSE CASE WHEN C.FINAL = 'TIER' THEN 'ERROR:  TIER LEVEL UNKNOWN'
	ELSE 'ERROR: UNKNOWN CHARGE'
	END END END END END END END END END END AS SDW_COMPONENT,
	CALL_STOP_DATE
	FROM SUB8 A LEFT JOIN SUB7 B ON A.DOCNUM = REPLACE(B.NSS_CALL_NUM,'-','')
	LEFT JOIN SUB5 C ON A.DOCNUM = REPLACE(C.NSS_CALL_NUM,'-','')
	LEFT JOIN SUB1 D ON A.DOCNUM = REPLACE(D.NSS_CALL_NUM,'-','')
	),

	SUB10 (DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME, SDW_COMPONENT, CALL_STOP_DATE) AS (
	SELECT DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME, SDW_COMPONENT, CALL_STOP_DATE
	FROM 
	SUB9 
	WHERE DOCNUM IN (SELECT DOCNUM FROM SUB9 WHERE SDW_COMPONENT IN ('C0001300', 'C0001301', 'C0001302', 'C0001303', 'C0001304')) 

	UNION ALL

	SELECT DOCNUM, PROD, SERIAL, CLOSE_CODE, CUST_ST, CUST_ZIP, CUST_NAME, SDW_COMPONENT, CALL_STOP_DATE
	FROM 
	SUB9 
	WHERE DOCNUM NOT IN (SELECT DOCNUM FROM SUB9 WHERE SDW_COMPONENT IN ('C0001300', 'C0001301', 'C0001302', 'C0001303', 'C0001304')) 
	),


	SUB11 (DOCNUM, TOTAL) AS (
	SELECT DOCNUM, SUM(1) AS TOTAL
	FROM 
	SUB10
	GROUP BY DOCNUM
	),

	SUB12 (DOCNUM) AS (
	SELECT DOCNUM
	FROM SUB11
	WHERE TOTAL &gt; 1
	),

	FINAL_DEPOT(&quot;MACHINE TYPE&quot;, &quot;DR SERIAL&quot;, &quot;LLI&quot;, &quot;PROBLEM NUMBER&quot;, &quot;ECA&quot;, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;WW CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;US GROUP&quot;, &quot;BILLING DESCR&quot;, &quot;TRANSACTION COUNT&quot;, &quot;PROVINCE&quot;, &quot;SERV PERFORMED DATE&quot;, &quot;DATA SOURCE&quot;, &quot;BILLING RATE&quot;, COMPANY_NAME) AS (
	SELECT DISTINCT PROD, SERIAL,
	'L00' AS LLI,
	DOCNUM, 
	'' AS ECA,
	CUST_ZIP,
	'649',
	'',
	SDW_COMPONENT,
	'',
	'',
	1,
	CUST_ST,
	CALL_STOP_DATE,
	'DC',
	0,
                CUST_NAME AS COMPANY_NAME
	FROM 
	SUB10
	WHERE DOCNUM NOT IN  (SELECT DOCNUM FROM SUB12)
	AND SDW_COMPONENT NOT LIKE 'ERROR:%'
	),

	ANOMALIES(ANOMALY, &quot;MACHINE TYPE&quot;, &quot;DR SERIAL&quot;, &quot;LLI&quot;, &quot;PROBLEM NUMBER&quot;, &quot;ECA&quot;, &quot;POSTAL CODE&quot;, &quot;COUNTRY CODE&quot;, &quot;WW CODE&quot;, &quot;SDW COMPONENT&quot;, &quot;US GROUP&quot;, &quot;BILLING DESCR&quot;, &quot;TRANSACTION COUNT&quot;, &quot;PROVINCE&quot;, &quot;SERV PERFORMED DATE&quot;, &quot;DATA SOURCE&quot;, &quot;BILLING RATE&quot;, NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, FINAL) AS (
	SELECT 
	'MORE THAN 1 TIER CHARGE FOR CALL',
	PROD, SERIAL,
	'L00' AS LLI,
	DOCNUM, 
	'' AS ECA,
	CUST_ZIP,
	'649',
	'',
	SDW_COMPONENT,
	'',
	'',
	1,
	CUST_ST,
	CALL_STOP_DATE,
	'DC',
	0,
	NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, FINAL
	FROM 
	SUB10 A LEFT JOIN SUB5 B ON A.DOCNUM = REPLACE(B.NSS_CALL_NUM,'-','')
	WHERE DOCNUM IN  (SELECT DOCNUM FROM SUB12)

	UNION ALL

	SELECT 
	'NSS CALL NOT FOUND IN SCM',
	'' AS PROD, 
	'' AS SERIAL,
	'L00' AS LLI,
	'' AS DOCNUM, 
	'' AS ECA,
	'' AS CUST_ZIP,
	'649',
	'',
	'' AS SDW_COMPONENT,
	'',
	'',
	1,
	'' AS CUST_ST,
	CAST(NULL AS DATE) AS CALL_STOP_DATE,
	'DC',
	0,
	NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, FINAL
	FROM SUB5 WHERE REM_NO_RET = 0 AND REM_OOW_CUST_BILL = 0
	AND REPLACE(NSS_CALL_NUM,'-','') NOT IN (SELECT DOCNUM FROM SUB8)

        UNION  ALL
	
        SELECT 
	SDW_COMPONENT,
	PROD, SERIAL,
	'L00' AS LLI,
	DOCNUM, 
	'' AS ECA,
	CUST_ZIP,
	'649',
	'',
	'' AS SDW_COMPONENT,
	'',
	'',
	1,
	CUST_ST,
	CALL_STOP_DATE,
	'DC',
	0,
	NSS_CALL_NUM, CA, CX, OS, X5, LW, IN, X4, X3, FINAL
	FROM 
	SUB10 A LEFT JOIN SUB5 B ON A.DOCNUM = REPLACE(B.NSS_CALL_NUM,'-','')
	WHERE SDW_COMPONENT LIKE 'ERROR:%'	
	)

	SELECT * FROM FINAL_DEPOT
      
      "/>
    </report>

</reports>
